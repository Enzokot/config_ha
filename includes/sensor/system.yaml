
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
      - 'time_date'

  - platform: systemmonitor
    resources:
    - type: processor_use
    - type: processor_temperature
    - type: disk_use_percent
      arg: /
    - type: disk_use
      arg: /
    - type: disk_free
      arg: /
    - type: memory_use_percent
    - type: last_boot

#Размер базы influxdb
  - platform: influxdb
    host: a0d7b954-influxdb
    port: 8086
    username: !secret influxdb_user
    password: !secret influxdb_password
    queries:
      - name: InfluxDB_DB_Size
        unit_of_measurement: MB
        value_template: '{{ (value | float(0.0) / 1024 / 1024) | round(1, "common", 0) }}'
        group_function: mean
        measurement: '"monitor"."tsm1_filestore"'
        database: _internal
        where: 'time > now() - 10s AND "database"=''homeassistant'''
        field: diskBytes 

#Сенсор длительности старта НА
#   - platform: command_line
#     name: "HA start time"
#     command: 'grep -m 1 -o "Home[[:space:]]Assistant[[:space:]]initialized[[:space:]]in[[:space:]][0-9]\+.[0-9]\+" /config/home-assistant.log | grep -o "[0-9]\+.[0-9]\+$" || echo -1'
#     scan_interval: 180
#     unit_of_measurement: "sec"

#Сенсоры ошибок и предупрежений в логах НА
  - platform: command_line
    name: errors in system log command line
    command: grep -c -E "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}\.[0-9]{3} ERROR .*$" /config/home-assistant.log || true
    scan_interval: 600
    unit_of_measurement: pc
    
  - platform: command_line
    name: warnings in system log command line
    command: grep -c -E "^[0-9]{4}-[0-9]{2}-[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}\.[0-9]{3} WARNING .*$" /config/home-assistant.log || true
    scan_interval: 600
    unit_of_measurement: pc

#Сенсор external_url для чтения данных с конфига
  - platform: python_script
    name: instance external url config
    scan_interval: '00:05:00'
    source: |
        from homeassistant.helpers import network
        try:
            self.state = network.get_url(
                self.hass,
                allow_internal=False,
            )
        except network.NoURLAvailableError:
            raise MyInvalidValueError("Failed to find suitable URL for my integration")

#Сенсор internal_url для чтения данных с конфига
  - platform: python_script
    name: instance internal url config
    scan_interval: '00:05:00'
    source: |
        from homeassistant.helpers.network import get_url
        self.state = get_url(self.hass)

#Доступность Telegram API
  - platform: command_line
    name: telegram status
    command: "curl --silent --fail -m 5 -o /dev/null -G https://api.telegram.org/bot{{ states('input_text.var_telegram_bot_api_token') }}/getMe && echo online || echo offline"

#Количество подключенных клиентов к API HA
  - platform: websocket_api

#Сенсор по issues для repairs
  - platform: python_script
    name: repairs state
    scan_interval: '12:00:00'
    source: |
        from homeassistant.helpers.issue_registry import async_get as async_get_issue_registry 

        issue_registry = async_get_issue_registry(self.hass)
        issues = [
            issue.to_json()
            for issue in issue_registry.issues.values()
            if issue.active
        ]

        self.state = len(issues)
        self.attributes = { "issues" : issues }

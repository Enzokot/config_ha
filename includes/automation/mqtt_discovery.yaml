
    - alias: mqtt_sensors_discovery
      id: mqtt_sensors_discovery
      initial_state: true 
      trigger: 
    #     - platform: state 
    #       entity_id: binary_sensor.mqtt_broker_hp
    #       to: 'on' 
        - platform: homeassistant
          event: start 
        - platform: event
          event_type: automation_reloaded
    #   condition: 
    #     - condition: state 
    #       entity_id: binary_sensor.mqtt_broker_hp
    #       state: 'on' 
      action:
        - parallel:
            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/mqtt_broker_uptime/config
                retain: true 
                payload: >- 
                    { 
                      "name":"MQTT Broker Uptime", 
                      "state_topic":"$SYS/broker/uptime", 
                      "icon":"mdi:timer-outline", 
                      "unit_of_measurement":"s", 
                      "entity_category": "diagnostic", 
                      "unique_id":"mqtt_broker_uptime",
                      "value_template":"{{ '{{' }} value | regex_replace('[^\\d]','') | trim {{ '}}' }}", 
                      "json_attributes_topic":"$SYS/broker/version", 
                      "json_attributes_template":"{\"version\":\"{{ '{{' }} (value | regex_replace('[\\s\\S]+?\\s(\\d)','\\\\1')) | trim {{ '}}' }}\"}", 
                      "device":{"identifiers":["mosquito_broker"],"manufacturer":"Eclipse","model":"Mosquitto","name":"Eclipse Mosquitto","sw_version":"{{ state_attr('sensor.mqtt_broker_uptime','version') }}","configuration_url":"https://mosquitto.org/"} 
                    }

            - service: mqtt.publish
              data: 
                topic: homeassistant/switch/permit_join_switch_z2m/config
                retain: true 
                payload: >- 
                  { 
                    "name":"permit_join_switch_z2m", 
                    "state_topic":"zigbee2mqtt/bridge/info",
                    "command_topic": "zigbee2mqtt/bridge/request/permit_join",
                    "payload_on":"true",
                    "payload_off":"false",
                    "icon":"mdi:cellphone-wireless",
                    "unique_id":"permit_join_switch_z2m",
                    "value_template":"{{ '{{' }} value_json.permit_join | lower {{ '}}' }}",
                    "device":{"identifiers":["z2m_info"],"manufacturer":"Enzokot","model":"Local polling","name":"Zigbee2MQTT add-on"}
                  }

            #На хосте "du -s /usr/share/hassio/addons/data/core_mariadb/databases/homeassistant/"
            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/maria_db_folder_size/config
                retain: true 
                payload: >- 
                  { 
                    "name":"Maria DB folder size", 
                    "state_topic":"host_data/folders_sizes/mariadb_homeassistant",
                    "value_template":"{{ '{{' }} (value | float(0.0) / 1024) | round(1, 'common', 0) {{ '}}' }}",
                    "icon":"mdi:folder-eye", 
                    "unit_of_measurement":"MB",
                    "unique_id":"maria_db_folder_size",
                    "device":{"identifiers":["disk_info"],"manufacturer":"Enzokot","model":"Local polling","name":"Disk info"}
                  }

            #На хосте "du -s /usr/share/hassio/addons/data/a0d7b954_influxdb/influxdb/data/homeassistant/"
            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/influxdb_db_folder_size/config
                retain: true 
                payload: >- 
                  { 
                    "name":"InfluxDB DB folder size", 
                    "state_topic":"host_data/folders_sizes/influxdb_homeassistant",
                    "value_template":"{{ '{{' }} (value | float(0.0) / 1024) | round(1, 'common', 0) {{ '}}' }}",
                    "icon":"mdi:folder-eye", 
                    "unit_of_measurement":"MB",
                    "unique_id":"influxdb_db_folder_size",
                    "device":{"identifiers":["disk_info"],"manufacturer":"Enzokot","model":"Local polling","name":"Disk info"}
                  }

            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/check_keenetic_link_down/config
                retain: true 
                payload: >- 
                  { 
                    "name":"check keenetic link down", 
                    "state_topic":"host_data/network_diagnostics/check_keenetic_link_down",
                    "icon":"mdi:calendar-clock", 
                    "unique_id":"check_keenetic_link_down",
                    "device":{"identifiers":["network_info"],"manufacturer":"Enzokot","model":"Local polling","name":"Network info"}
                  }

            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/sostoianie_mosta/config
                retain: true 
                payload: >- 
                  { 
                    "name":"Состояние моста", 
                    "state_topic":"zigbee2mqtt/bridge/state",
                    "icon":"mdi:calendar-clock", 
                    "unique_id":"sostoianie_mosta",
                    "device":{"identifiers":["z2m_info"],"manufacturer":"Enzokot","model":"Local polling","name":"Zigbee2MQTT add-on"}
                  }

            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/zigbee2mqtt_bridge_uptime/config
                retain: true 
                payload: >- 
                  { 
                    "avty":[{"topic":"zigbee2mqtt/bridge/state"}],
                    "name":"Zigbee2mqtt Bridge Uptime", 
                    "state_topic":"host_data/zigbee2mqtt_start_at",
                    "icon":"mdi:av-timer",
                    "unit_of_measurement":"s",
                    "unique_id":"zigbee2mqtt_bridge_uptime",
                    "device":{"identifiers":["z2m_info"],"manufacturer":"Enzokot","model":"Local polling","name":"Zigbee2MQTT add-on"}
                  }

            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/zigbee2mqtt_coordinator_version/config
                retain: true 
                payload: >- 
                  { 
                    "name":"Zigbee2mqtt Coordinator Version", 
                    "state_topic":"zigbee2mqtt/bridge/info",
                    "value_template":"{{ '{{' }} value_json.coordinator {{ '}}' }}",
                    "json_attributes_topic":"zigbee2mqtt/bridge/info",
                    "json_attributes_template":"{{ '{{ {' }}'revision':value_json.coordinator['meta'].revision, 'type':value_json.coordinator['type']{{ '}' }} | tojson {{ '}}' }}",
                    "icon":"mdi:chip",
                    "unique_id":"zigbee2mqtt_coordinator_version",
                    "device":{"identifiers":["z2m_info"],"manufacturer":"Enzokot","model":"Local polling","name":"Zigbee2MQTT add-on"}
                  }

            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/0x5c0272fffec89454/local_temperature/config
                retain: true 
                payload: >- 
                  { 
                    "avty":[{"topic":"zigbee2mqtt/bridge/state"},{"topic":"zigbee2mqtt/Childrens room valve with thermostat/availability"}],
                    "avty_mode":"all",
                    "name":"0x5c0272fffec89454_local_temperature",
                    "state_topic":"zigbee2mqtt/Childrens room valve with thermostat",
                    "value_template":"{{ '{{' }} value_json.local_temperature {{ '}}' }}",
                    "unit_of_measurement":"°C",
                    "unique_id":"0x5c0272fffec89454_local_temperature",
                    "device":{"identifiers":["zigbee2mqtt_0x5c0272fffec89454"],"manufacturer":"TuYa","model":"Radiator valve with thermostat (TS0601_thermostat)","name":"Childrens room valve with thermostat"} 
                  }

            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/0x5c0272fffec89454/local_temperature_calibration/config
                retain: true 
                payload: >- 
                  { 
                    "avty":[{"topic":"zigbee2mqtt/bridge/state"},{"topic":"zigbee2mqtt/Childrens room valve with thermostat/availability"}],
                    "avty_mode":"all",
                    "name":"0x5c0272fffec89454_local_temperature_calibration",
                    "state_topic":"zigbee2mqtt/Childrens room valve with thermostat",
                    "value_template":"{{ '{{' }} value_json.local_temperature_calibration {{ '}}' }}",
                    "unit_of_measurement":"°C",
                    "unique_id":"0x5c0272fffec89454_local_temperature_calibration",
                    "device":{"identifiers":["zigbee2mqtt_0x5c0272fffec89454"],"manufacturer":"TuYa","model":"Radiator valve with thermostat (TS0601_thermostat)","name":"Childrens room valve with thermostat"} 
                  }

            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/0x60a423fffe968719/local_temperature/config
                retain: true 
                payload: >- 
                  { 
                    "avty":[{"topic":"zigbee2mqtt/bridge/state"},{"topic":"zigbee2mqtt/Bedroom valve with thermostat/availability"}],
                    "avty_mode":"all",
                    "name":"0x60a423fffe968719_local_temperature",
                    "state_topic":"zigbee2mqtt/Bedroom valve with thermostat",
                    "value_template":"{{ '{{' }} value_json.local_temperature {{ '}}' }}",
                    "unit_of_measurement":"°C",
                    "unique_id":"0x60a423fffe968719_local_temperature",
                    "device":{"identifiers":["zigbee2mqtt_0x60a423fffe968719"],"manufacturer":"TuYa","model":"Radiator valve with thermostat (TS0601_thermostat)","name":"Bedroom valve with thermostat"} 
                  }

            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/0x60a423fffe968719/local_temperature_calibration/config
                retain: true 
                payload: >- 
                  { 
                    "avty":[{"topic":"zigbee2mqtt/bridge/state"},{"topic":"zigbee2mqtt/Bedroom valve with thermostat/availability"}],
                    "avty_mode":"all",
                    "name":"0x60a423fffe968719_local_temperature_calibration",
                    "state_topic":"zigbee2mqtt/Bedroom valve with thermostat",
                    "value_template":"{{ '{{' }} value_json.local_temperature_calibration {{ '}}' }}",
                    "unit_of_measurement":"°C",
                    "unique_id":"0x60a423fffe968719_local_temperature_calibration",
                    "device":{"identifiers":["zigbee2mqtt_0x60a423fffe968719"],"manufacturer":"TuYa","model":"Radiator valve with thermostat (TS0601_thermostat)","name":"Bedroom valve with thermostat"} 
                  }

            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/0x5c0272fffec9db22/local_temperature/config
                retain: true 
                payload: >- 
                  { 
                    "avty":[{"topic":"zigbee2mqtt/bridge/state"},{"topic":"zigbee2mqtt/Living room valve with thermostat/availability"}],
                    "avty_mode":"all",
                    "name":"0x5c0272fffec9db22_local_temperature",
                    "state_topic":"zigbee2mqtt/Living room valve with thermostat",
                    "value_template":"{{ '{{' }} value_json.local_temperature {{ '}}' }}",
                    "unit_of_measurement":"°C",
                    "unique_id":"0x5c0272fffec9db22_local_temperature",
                    "device":{"identifiers":["zigbee2mqtt_0x5c0272fffec9db22"],"manufacturer":"TuYa","model":"Radiator valve with thermostat (TS0601_thermostat)","name":"Living room valve with thermostat"} 
                  }

            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/0x5c0272fffec9db22/local_temperature_calibration/config
                retain: true 
                payload: >- 
                  { 
                    "avty":[{"topic":"zigbee2mqtt/bridge/state"},{"topic":"zigbee2mqtt/Living room valve with thermostat/availability"}],
                    "avty_mode":"all",
                    "name":"0x5c0272fffec9db22_local_temperature_calibration",
                    "state_topic":"zigbee2mqtt/Living room valve with thermostat",
                    "value_template":"{{ '{{' }} value_json.local_temperature_calibration {{ '}}' }}",
                    "unit_of_measurement":"°C",
                    "unique_id":"0x5c0272fffec9db22_local_temperature_calibration",
                    "device":{"identifiers":["zigbee2mqtt_0x5c0272fffec9db22"],"manufacturer":"TuYa","model":"Radiator valve with thermostat (TS0601_thermostat)","name":"Living room valve with thermostat"} 
                  }

            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/0x5c0272fffe8de819/local_temperature/config
                retain: true 
                payload: >- 
                  { 
                    "avty":[{"topic":"zigbee2mqtt/bridge/state"},{"topic":"zigbee2mqtt/Kitchen valve with thermostat/availability"}],
                    "avty_mode":"all",
                    "name":"0x5c0272fffe8de819_local_temperature",
                    "state_topic":"zigbee2mqtt/Kitchen valve with thermostat",
                    "value_template":"{{ '{{' }} value_json.local_temperature {{ '}}' }}",
                    "unit_of_measurement":"°C",
                    "unique_id":"0x5c0272fffe8de819_local_temperature",
                    "device":{"identifiers":["zigbee2mqtt_0x5c0272fffe8de819"],"manufacturer":"TuYa","model":"Radiator valve with thermostat (TS0601_thermostat)","name":"Kitchen valve with thermostat"} 
                  }

            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/0x5c0272fffe8de819/local_temperature_calibration/config
                retain: true 
                payload: >- 
                  { 
                    "avty":[{"topic":"zigbee2mqtt/bridge/state"},{"topic":"zigbee2mqtt/Kitchen valve with thermostat/availability"}],
                    "avty_mode":"all",
                    "name":"0x5c0272fffe8de819_local_temperature_calibration", 
                    "state_topic":"zigbee2mqtt/Kitchen valve with thermostat",
                    "value_template":"{{ '{{' }} value_json.local_temperature_calibration {{ '}}' }}",
                    "unit_of_measurement":"°C",
                    "unique_id":"0x5c0272fffe8de819_local_temperature_calibration",
                    "device":{"identifiers":["zigbee2mqtt_0x5c0272fffe8de819"],"manufacturer":"TuYa","model":"Radiator valve with thermostat (TS0601_thermostat)","name":"Kitchen valve with thermostat"} 
                  }

            #На хосте /etc/login_ssh.sh
            - service: mqtt.publish
              data: 
                topic: homeassistant/sensor/login_ssh_kotletochka_dell_srv/config
                retain: true 
                payload: >- 
                  { 
                    "name":"login ssh kotletochka dell srv", 
                    "state_topic":"host_data/login_ssh/kotletochka_dell_srv",
                    "value_template":"{{ '{{' }} value_json.date {{ '}}' }}",
                    "json_attributes_topic":"host_data/login_ssh/kotletochka_dell_srv",
                    "json_attributes_template":"{{ '{{ {' }}'user':value_json.user, 'ruser':value_json.ruser, 'address':value_json.address, 'service':value_json.service, 'tty':value_json.tty{{ '}' }} | tojson {{ '}}' }}",
                    "force_update":"true",
                    "device_class":"timestamp",
                    "icon":"mdi:ssh", 
                    "unique_id":"login_ssh_kotletochka_dell_srv",
                    "device":{"identifiers":["login_ssh"],"manufacturer":"Enzokot","model":"Local push","name":"Login's ssh info"}
                  }

            - service: mqtt.publish
              data: 
                topic: homeassistant/binary_sensor/dmesg_ext4_warning/config
                retain: true 
                payload: >- 
                  { 
                    "name":"Kernel_EXT4_warning", 
                    "state_topic":"host_data/dmesg_ext4_warning",
                    "icon":"mdi:harddisk",
                    "device_class":"problem",
                    "unique_id":"dmesg_ext4_warning",
                    "device":{"identifiers":["host_kernel_info"],"manufacturer":"Enzokot","model":"Local polling","name":"Host kernel info"}
                  }

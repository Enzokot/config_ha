
    - alias: dynamic group sensor battery
      id: dynamic group sensor battery
      initial_state: true
      mode: restart
      triggers:
          - trigger: event
            event_type: entity_registry_updated
          - trigger: homeassistant
            event: start
      actions:
        - action: group.set
          data:
            name: dynamic group sensor battery
            object_id: dynamic_group_sensor_battery
            icon: mdi:battery-unknown
            entities: >-
                        {%- set datanames = namespace(entity_name=[]) -%}
                        {%- 
                            for state in states.sensor 
                              if is_state_attr(state.entity_id, 'device_class', 'battery') and
                              (state.entity_id.endswith("_battery") or state.entity_id.endswith("_battery_level"))
                        %}
                            {% set datanames.entity_name = datanames.entity_name + [state.entity_id] -%}
                        {%- endfor %}
                        {%- 
                            for state in states.binary_sensor 
                              if is_state_attr(state.entity_id, 'device_class', 'battery') and
                              state.entity_id.endswith("_low_battery")
                        %}
                            {% set datanames.entity_name = datanames.entity_name + [state.entity_id] -%}
                        {%- endfor %}
                        {{ datanames.entity_name | list | join(', ')}}

    - alias: dynamic group sensor linkquality
      id: dynamic group sensor linkquality
      initial_state: true
      mode: restart
      triggers:
        - trigger: event
          event_type: entity_registry_updated
        - trigger: homeassistant
          event: start
      conditions:
        - "{{ states.sensor | map(attribute='entity_id') | list | regex_findall(find='(_linkquality|_zigbee)', ignorecase=True) | length > 0 }}"
      actions:
        - action: group.set
          data:
            name: dynamic group sensor linkquality
            object_id: dynamic_group_sensor_linkquality
            icon: mdi:signal
            entities: >-
                {%- 
                    for state in states.sensor 
                      if state.entity_id.endswith("_linkquality") or state.entity_id.endswith("_zigbee")
                %}
                    {{ state.entity_id }}{%- if not loop.last -%}, {%- endif -%}
                {%- endfor %}

    - alias: dynamic group sensor last seen
      id: dynamic group sensor last seen
      initial_state: true
      mode: restart
      triggers:
        - trigger: event
          event_type: entity_registry_updated
        - trigger: homeassistant
          event: start
      conditions:
        - "{{ states.sensor | map(attribute='entity_id') | list | regex_findall(find='(_last_seen|_zigbee)', ignorecase=True) | length > 0 }}"
      actions:
        - action: group.set
          data:
            name: dynamic group sensor last seen
            object_id: dynamic_group_sensor_last_seen
            icon: mdi:clock
            entities: >-
                {%- 
                    for state in states.sensor 
                      if state.entity_id.endswith("_last_seen") or state.entity_id.endswith("_zigbee")
                %}
                    {{ state.entity_id }}{%- if not loop.last -%}, {%- endif -%}
                {%- endfor %}

    - alias: dynamic group gateway alarm last state
      id: dynamic group gateway alarm last state
      initial_state: true
      mode: queued
      triggers:
        - trigger: state
          entity_id: 
             - alarm_control_panel.54ef44315770_alarm
             - alarm_control_panel.54ef44cb80fd_alarm
             - alarm_control_panel.54ef443127b2_alarm
          to: 'triggered'
        - trigger: state
          entity_id: input_boolean.alarm_gateway_button
          to: 'on'
      conditions:
        - condition: or
          conditions:
            - "{{ states.alarm_control_panel | selectattr('state', 'in', ['armed_away', 'disarmed']) | rejectattr('entity_id', 'eq', 'alarm_control_panel.signalka_shliuza_alarm') | list | count > 0 }}"
            - "{{ trigger.from_state.state in ['armed_away', 'disarmed'] }}"
      actions:
        - parallel:
            - choose:
              - conditions: 
                - >-
                     {{ trigger.from_state.state == 'armed_away'
                       or states.alarm_control_panel 
                     | selectattr('state', 'eq', 'armed_away') 
                     | rejectattr('entity_id', 'eq', 'alarm_control_panel.signalka_shliuza_alarm') 
                     | list | count > 0 }}
                sequence:
                    - action: group.set
                      data:
                        name: dynamic group gateway alarm last state armed away
                        object_id: dynamic_group_gateway_alarm_last_state_armed_away
                        icon: mdi:shield-lock
                        entities: >-
                          {% set data = namespace(entities=[]) %}
                          {% set data.entities = data.entities + 
                            states.alarm_control_panel 
                            | selectattr('state', 'eq', 'armed_away') 
                            | rejectattr('entity_id', 'eq', 'alarm_control_panel.signalka_shliuza_alarm') 
                            | map(attribute = 'entity_id') | list
                          %}
                          {% if trigger.from_state.state == 'armed_away' %}
                            {% set data.entities = data.entities + [trigger.entity_id] %}
                          {% endif %}
                          {% if states.group.dynamic_group_gateway_alarm_last_state_armed_away is not none %}
                            {% set data.entities = data.entities + expand('group.dynamic_group_gateway_alarm_last_state_armed_away') | map(attribute = 'entity_id') | list %}
                          {% endif %}
                          {{ data.entities | unique | join(', ') }}
            - choose:
              - conditions: 
                - >-
                      {{ trigger.from_state.state == 'disarmed'
                        or states.alarm_control_panel 
                      | selectattr('state', 'eq', 'disarmed') 
                      | rejectattr('entity_id', 'eq', 'alarm_control_panel.signalka_shliuza_alarm') 
                      | list | count > 0 }}
                sequence:
                    - action: group.set
                      data:
                        name: dynamic group gateway alarm last state disarmed
                        object_id: dynamic_group_gateway_alarm_last_state_disarmed
                        icon: mdi:shield-lock
                        entities: >-
                          {% set data = namespace(entities=[]) %}
                          {% set data.entities = data.entities + 
                            states.alarm_control_panel 
                            | selectattr('state', 'eq', 'disarmed') 
                            | rejectattr('entity_id', 'eq', 'alarm_control_panel.signalka_shliuza_alarm') 
                            | map(attribute = 'entity_id') | list
                          %}
                          {% if trigger.from_state.state == 'disarmed' %}
                            {% set data.entities = data.entities + [trigger.entity_id] %}
                          {% endif %}
                          {% if states.group.dynamic_group_gateway_alarm_last_state_disarmed is not none %}
                            {% set data.entities = data.entities + expand('group.dynamic_group_gateway_alarm_last_state_disarmed') | map(attribute = 'entity_id') | list %}
                          {% endif %}
                          {{ data.entities | unique | join(', ') }}

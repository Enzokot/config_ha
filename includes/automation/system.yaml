
- alias: DB purge everyday
  id: DB purge everyday
  initial_state: true
  triggers:
    - trigger: time
      at: '01:00:00'
  actions:
    - action: recorder.purge
      data:
          keep_days: 30
          repack: true

#Перезапуск интеграции speedtest.net по недоступности сенсоров
- alias: speedtest_integration_restart
  id: speedtest_integration_restart
  trigger_variables:
    not_has_state: "{{ ['unknown', 'unavailable', 'none'] }}"
  triggers:
    - trigger: time_pattern
      minutes: "/45"
  conditions:
    - condition: state
      entity_id: input_boolean.instances_stoping
      state: 'off'
    - condition: state
      entity_id: binary_sensor.local_network_availability
      state: 'on'
    - condition: template
      value_template: >
            {{ states('sensor.speedtest_ping') in not_has_state and
               states('sensor.speedtest_download') in not_has_state and
               states('sensor.speedtest_upload') in not_has_state
            }}
  actions:
    - action: homeassistant.reload_config_entry
      data:
        entry_id: "{{ config_entry_id('sensor.speedtest_ping') }}"
    # - action: rest_command.reload_integration_speedtest
    #   data: {}

- alias: speedtest_integration_restart_on_event
  id: speedtest_integration_restart_on_event
  mode: single
  max_exceeded: silent
  trigger_variables:
    not_has_state: "{{ ['unknown', 'unavailable', 'none'] }}"
  triggers:
    - trigger: event
      event_type: state_changed
      event_data:
        entity_id: 'sensor.speedtest_ping'
    - trigger: event
      event_type: state_changed
      event_data:
        entity_id: 'sensor.speedtest_download'
    - trigger: event
      event_type: state_changed
      event_data:
        entity_id: 'sensor.speedtest_upload'
  conditions:
    - condition: state
      entity_id: input_boolean.instances_stoping
      state: 'off'
    - "{{ as_timestamp(now()) - as_timestamp(state_attr(this.entity_id, 'last_triggered')) > 60 }}"
    - condition: state
      entity_id: binary_sensor.local_network_availability
      state: 'on'
    - condition: template
      value_template: >-
        {{ trigger.event.data.new_state.state != trigger.event.data.old_state.state 
            and trigger.event.data.new_state.state in not_has_state
        }}
  actions:
    - choose:
        - conditions: 
            - condition: state
              entity_id: input_boolean.instances_stoping
              state: 'off'
          sequence:
            - delay:
                seconds: 30
            - action: homeassistant.reload_config_entry
              data:
                entry_id: "{{ config_entry_id('sensor.speedtest_ping') }}"

#Установка флага перезапуска НА
- alias: system_event_instances_starting_stoping_set
  id: system_event_instances_starting_stoping_set
  initial_state: true
  triggers:
    - trigger: homeassistant
      event: start
      id: 'homeassistant_start'
    # - trigger: event
    #   event_type: homeassistant_started
    #   id: 'homeassistant_start'
    - trigger: homeassistant
      event: shutdown
    # - trigger: event
    #   event_type: shutdown
  actions:
    - parallel:
        - action: >
            {% if trigger.id == 'homeassistant_start' -%}
                input_boolean.turn_off
            {% else -%}
                input_boolean.turn_on
            {% endif %}
          target:
            entity_id: input_boolean.instances_stoping
        - action: >
            {% if trigger.id == 'homeassistant_start' -%}
                automation.turn_on
            {% else -%}
                automation.turn_off
            {% endif %}
          target:
            entity_id: automation.notifications_objects_in_unavailable_status

#Счетчик числа событий link down для лога Keenetic
- alias: counter increment link down keenetic
  id: counter increment link down keenetic
  initial_state: true
  mode: single
  max_exceeded: silent
  trigger_variables:
    not_has_state: "{{ ['unknown', 'unavailable', 'none', None, null, '', 'null'] }}"
  triggers:
    - trigger: state
      entity_id: sensor.check_keenetic_link_down
  conditions:
    - condition: template
      value_template: >
        {{ 
           trigger.to_state.state not in not_has_state and trigger.from_state.state != '' and
           trigger.to_state.state != trigger.from_state.state
        }}
  actions:
    - action: counter.increment
      target:
        entity_id: counter.counter_keenetic_link_down

#Счетчики числа событий warning и error в syslog HA
- alias: system log home assistant warning and error counter
  id: system log home assistant warning and error counter
  initial_state: true
  mode: queued
  max: 100
  max_exceeded: silent
  trigger_variables:
    this_name: '{{ this.attributes.friendly_name | string }}'
  triggers:
    - trigger: event
      event_type: system_log_event
      event_data:
        level: ERROR
    - trigger: event
      event_type: system_log_event
      event_data:
        level: WARNING
  conditions:
    - condition: template
      value_template: "{{ not this_name in (trigger.event.data.message | string) }}"
  actions:
    - action: counter.increment
      target:
        entity_id: >- 
            {{ 'counter.system_log_' + trigger.event.data.level | lower + '_counter' }}

- alias: system log clear warning and error reset counter
  id: system log clear warning and error reset counter
  initial_state: true
  mode: queued
  max_exceeded: silent
  triggers:
    - trigger: event
      event_type: call_service
      event_data:
        domain: system_log
        service: clear
  actions:
    - action: counter.reset
      target:
        entity_id:
          - counter.system_log_error_counter
          - counter.system_log_warning_counter

#Перезапуск модема, по переходу в статус unavailable
- alias: restart e3372h 320 modem unavailable
  id: restart e3372h 320 modem unavailable
  initial_state: true
  mode: single
  max_exceeded: silent
  triggers:
    - trigger: state
      entity_id: sensor.huawei_e3372h_320_sinr
      to:
    - trigger: homeassistant
      event: start
  conditions:
    - condition: state
      entity_id: input_boolean.instances_stoping
      state: 'off'
    - "{{ not has_value('sensor.huawei_e3372h_320_sinr') }}"
  actions:
    - wait_template: "{{ has_value('sensor.huawei_e3372h_320_sinr') or is_state('input_boolean.instances_stoping', 'on') }}"
      timeout: "00:05:00"
    - choose:
        - conditions: "{{ not wait.completed and is_state('binary_sensor.local_network_availability', 'on') }}"
          sequence:
              - action: button.press
                target:
                  entity_id: button.e3372h_320_restart

#Обновление Telegram bot API token в input text
- alias: update input text telegram bot api token
  id: update input text telegram bot api token
  initial_state: true
  mode: queued
  max_exceeded: silent
  triggers:
    - trigger: event
      event_type: "event_telegram_reloaded"
  actions:
    - action: input_text.set_value
      target:
        entity_id: input_text.var_telegram_bot_api_token
      data:
        value: !secret telegram_api

#Перезапуск интеграции проверки длительности сертификата для asuscomm по недоступности сенсоров
- alias: cert_expiry_timestamp_asuscomm_unavailable
  id: cert_expiry_timestamp_asuscomm_unavailable
  mode: single
  max_exceeded: silent
  triggers:
    - trigger: state
      entity_id: sensor.cert_expiry_timestamp_asuscomm
      to:
    - trigger: homeassistant
      event: start
  conditions:
    - condition: state
      entity_id: input_boolean.instances_stoping
      state: 'off'
    - "{{ as_timestamp(now()) - as_timestamp(state_attr(this.entity_id, 'last_triggered')) > 60 }}"
    - "{{ not has_value('sensor.cert_expiry_timestamp_asuscomm') }}"
  actions:
    - wait_template: "{{ has_value('sensor.cert_expiry_timestamp_asuscomm') or is_state('input_boolean.instances_stoping', 'on') }}"
      timeout: "00:01:00"
    - choose:
        - conditions: "{{ not wait.completed and is_state('binary_sensor.local_network_availability', 'on') }}"
          sequence:
            - action: homeassistant.reload_config_entry
              data:
                entry_id: "{{ config_entry_id('sensor.cert_expiry_timestamp_asuscomm') }}"

#Обновление сенсора repairs_state по событию системной проблемы
- alias: repairs issue registry sensor update
  id: repairs issue registry sensor update
  mode: restart
  triggers:
    - trigger: event
      event_type: repairs_issue_registry_updated
      event_data:
        action: create
    - trigger: homeassistant
      event: start
  actions:
    - action: homeassistant.update_entity
      data: 
        entity_id: sensor.repairs_state


- alias: DB purge everyday
  id: DB purge everyday
  initial_state: true
  trigger:
    - platform: time
      at: '01:00:00'
  action:
    - service: recorder.purge
      data:
          keep_days: 30
          repack: true

#Отслеживание питания RPi
- alias: tracker power rpi
  id: tracker power rpi
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.rpi_power_inverted
    from: 'on'
    to: 'off'
  action:
    service: notify.telegram_enzokot_to_bot
    data:
        title: >-
                 {{ '\U000026a0' }} *Мониторинг устройств*
        message: "Необходимо проверить питание RPi"

#Перезапуск nginx для принятия нового сертификата, который получает certbot на rpi в пятницу
- alias: restart nginx addon
  id: restart nginx addon
  initial_state: true
  trigger:
    - platform: time
      at: '04:00:00'
  condition:
    condition: time
    weekday:
      - sat      
  action:
    - service: hassio.addon_restart
      data:
          addon: 'core_nginx_proxy'

#Перезапуск аддона ssh перед бекапом, не всегда стартует Home Assistant STDIN service
- alias: restart ssh and web terminal addon
  id: restart ssh and web terminal addon
  initial_state: true
  trigger:
    - platform: time
      at: '23:00:00'
    - platform: homeassistant
      event: start
  action:
    - variables:
        username: !secret mqtt_broker_username
        password: !secret mqtt_broker_password
    - service: hassio.addon_stdin
      data:
        addon: a0d7b954_ssh
        input: >-
                /config/check_addon_stdin.sh {{ username }} {{ password }}
    - wait_for_trigger:
        - platform: state
          entity_id: sensor.last_date_check_addon_ssh_stdin
      timeout: "00:02:00"
    - choose:
        - conditions: "{{ wait.trigger == None }}"
          sequence:
            - service: hassio.addon_restart
              data:
                  addon: 'a0d7b954-ssh'

#Бекап базы homeassistant в MariaDB
- alias: backup homeassistant database
  id: backup homeassistant database
  mode: single
  max_exceeded: silent  
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.last_backup_db_homeassistant
  condition:
    - condition: template
      value_template: >- 
        {{ 
            trigger.from_state.state not in ['unavailable', 'unknown', ''] 
            and trigger.to_state.state in ['10', '11', '12'] 
        }}
  action:
    - variables:
        username: !secret mqtt_broker_username
        password: !secret mqtt_broker_password
    - service: hassio.addon_stdin
      data:
        addon: a0d7b954_ssh
        input: >-
                /config/backup.sh {{ username }} {{ password }}

#Перезапуск интеграции speedtest.net по недоступности сенсоров
- alias: speedtest_integration_restart
  id: speedtest_integration_restart
  trigger:
    - platform: time_pattern
      minutes: "/45"
  condition:
    - condition: template
      value_template: >
            {% set ignore = ['unknown', 'unavailable', 'none'] %}
            {{ states('sensor.speedtest_ping') in ignore and
               states('sensor.speedtest_download') in ignore and
               states('sensor.speedtest_upload') in ignore
            }}
  action:
    - service: homeassistant.reload_config_entry
      data:
        entry_id: 8a7c8a568a453f39d2a77dda05119c4b
    # - service: rest_command.reload_integration_speedtest
    #   data: {}

- alias: speedtest_integration_restart_on_event
  id: speedtest_integration_restart_on_event
  mode: single
  max_exceeded: silent
  trigger:
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: 'sensor.speedtest_ping'
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: 'sensor.speedtest_download'
    - platform: event
      event_type: state_changed
      event_data:
        entity_id: 'sensor.speedtest_upload'
  condition:
    - condition: state
      entity_id: input_boolean.instances_stoping
      state: 'off'
    - condition: template
      value_template: >-
        {{ trigger.event.data.new_state.state != trigger.event.data.old_state.state 
            and trigger.event.data.new_state.state in ['unknown', 'unavailable', 'none']
        }}
  action:
    - choose:
        - conditions: 
            - condition: state
              entity_id: input_boolean.instances_stoping
              state: 'off'
          sequence:
            - delay:
                seconds: 30
            - service: homeassistant.reload_config_entry
              data:
                entry_id: 8a7c8a568a453f39d2a77dda05119c4b

#Перезагрузка автоматизаций
- alias: system_automation_reload
  id: system_automation_reload
  initial_state: true
  trigger:
    - platform: event
      event_type: call_service
      event_data:
        domain: automation
        service: reload
    - platform: event
      event_type: automation_reloaded
  condition:
    - condition: template
      value_template: >-
        {% set auto_exclude = 'automation.system_automation_reload' %}
        {{ trigger.event.event_type == 'call_service' and
           states | selectattr('domain', 'eq', 'automation') | selectattr('state', 'eq', 'on') | selectattr('entity_id', 'ne', auto_exclude) | map(attribute = 'entity_id') | list | count > 0
           or
           trigger.event.event_type == 'automation_reloaded' and
           expand('group.dynamic_group_automation_for_reload') | count > 0
        }}
  action:
    - choose:
        - conditions: "{{ trigger.event.event_type == 'call_service' }}"
          sequence:  
            - service: group.set
              data:
                name: dynamic group automation for reload
                object_id: dynamic_group_automation_for_reload
                icon: mdi:script-text
                entities: >-
                  {% set auto_exclude = 'automation.system_automation_reload' %}
                  {{ states | selectattr('domain', 'eq', 'automation') | selectattr('state', 'eq', 'on') | selectattr('entity_id', 'ne', auto_exclude) | map(attribute = 'entity_id') | list | join(', ') }}
    - service: >- 
        {% if trigger.event.event_type == 'call_service' -%}
            automation.turn_off
        {% else -%}
            automation.turn_on
        {% endif -%}
      data:
        entity_id: >-
          {{ expand('group.dynamic_group_automation_for_reload') | map(attribute = 'entity_id') | join(', ') }}

#Удаление устройств, без удаления интеграции
- alias: device_entity_deletion_python_script
  id: device_entity_deletion_python_script
  initial_state: true
  mode: queued
  trigger:
    - platform: event
      event_type: device_registry_updated
  action:
    - service: python_script.exec
      data:
        device_id: "{{ trigger.event.data.device_id }}"
        source: |
          registry = hass.data['device_registry']
          device = registry.async_get(data['device_id'])
          if device and device.name_by_user == 'delete_this':
              registry.async_remove_device(data['device_id'])

#Установка флага перезапуска НА
- alias: system_event_instances_starting_stoping_set
  id: system_event_instances_starting_stoping_set
  initial_state: true
  trigger:
    - platform: homeassistant
      event: start
      id: 'homeassistant_start'
    - platform: event
      event_type: homeassistant_stop
  action:
    - service: >
        {% if trigger.id == 'homeassistant_start' -%}
            input_boolean.turn_off
        {% else -%}
            input_boolean.turn_on
        {% endif %}
      data:
        entity_id: input_boolean.instances_stoping
    - service: >
        {% if trigger.id == 'homeassistant_start' -%}
            automation.turn_on
        {% else -%}
            automation.turn_off
        {% endif %}
      data:
        entity_id: automation.notifications_objects_in_unavailable_status

#Обновление данных entity каждые 30мин
- alias: homeassistant_update_entity_30min
  id: homeassistant_update_entity_30min
  trigger:
    - platform: time_pattern
      minutes: "/30"
  action:
    - service: homeassistant.update_entity
      entity_id: 
        - sensor.huawei_e3372h_320_sms_unread
        - binary_sensor.huawei_e3372h_320_sms_storage_full

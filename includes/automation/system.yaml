
- alias: DB purge everyday
  id: DB purge everyday
  initial_state: true
  trigger:
    - platform: time
      at: '01:00:00'
  action:
    - service: recorder.purge
      data:
          keep_days: 180
          repack: true

#Отслеживание питания RPi
- alias: tracker power rpi
  id: tracker power rpi
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.rpi_power_inverted
    from: 'on'
    to: 'off'
  action:
    service: notify.telegram_enzokot_to_bot
    data:
        title: >-
                 {{ '\U000026a0' }} *Мониторинг устройств*
        message: "Необходимо проверить питание RPi"

#Перезапуск nginx для принятия нового сертификата, который получает certbot на rpi в пятницу
- alias: restart nginx addon
  id: restart nginx addon
  initial_state: true
  trigger:
    - platform: time
      at: '04:00:00'
  condition:
    condition: time
    weekday:
      - sat      
  action:
    - service: hassio.addon_restart
      data:
          addon: 'core_nginx_proxy'

#Бекап базы homeassistant в MariaDB
- alias: backup homeassistant database
  id: backup homeassistant database
  initial_state: true
  trigger:
    - platform: time
      at: '00:30:00'
  action:
    - service: hassio.addon_stdin
      data:
        addon: a0d7b954_ssh
        input: "/config/backup.sh"

#Перезапуск интеграции speedtest.net по недоступности сенсоров
- alias: speedtest_integration_restart
  id: speedtest_integration_restart
  initial_state: 'true'
  trigger:
    - platform: time_pattern
      minutes: "/45"
  condition:
    - condition: template
      value_template: >
            {% set ignore = ['unknown', 'unavailable', 'none'] %}
            {{ states('sensor.speedtest_ping') in ignore and
               states('sensor.speedtest_download') in ignore and
               states('sensor.speedtest_upload') in ignore
            }}
  action:
    - service: rest_command.reload_integration_speedtest
      data: {}

#Перезагрузка автоматизаций
- alias: system_automation_reload
  id: system_automation_reload
  initial_state: true
  trigger:
    - platform: event
      event_type: call_service
      event_data:
        domain: automation
        service: reload
    - platform: event
      event_type: automation_reloaded
  condition:
    - condition: or
      conditions:  
        - condition: and
          conditions:
            - condition: state
              entity_id: automation.notifications_objects_in_unavailable_status
              state: 'on'
            - condition: template
              value_template: >-
                {{ trigger.event.event_type == 'call_service' }}
        - condition: and
          conditions:
            - condition: state
              entity_id: input_boolean.automation_notifications_objects_in_unavailable_status
              state: 'on'
            - condition: template
              value_template: >-
                {{ trigger.event.event_type == 'automation_reloaded' }}
  action:
    - service: >
        {% if trigger.event.event_type == 'call_service' -%}
            input_boolean.turn_on
        {% else -%}
            input_boolean.turn_off
        {% endif -%}
      data:
        entity_id: input_boolean.automation_notifications_objects_in_unavailable_status
    - service: > 
        {% if trigger.event.event_type == 'call_service' -%}
            automation.turn_off
        {% else -%}
            automation.turn_on
        {% endif -%}
      entity_id: automation.notifications_objects_in_unavailable_status

substitutions:
  devicename: server-ac-power-socket
  current_res: "0.00221"
  voltage_div: "816"

esphome:
  name: ${devicename}
  platform: ESP8266
  board: esp8285
  comment: Server AC Plug
  on_boot:
    priority: -10
    then:
      - switch.turn_on: relay

wifi:
  reboot_timeout: 15min
  power_save_mode: none
  networks:
  - ssid: Kotletochka_Yi
    password: !secret kotletochka_wifi_password
    hidden: true
    priority: 1
  
  - ssid: Kotletochka_kit
    password: !secret kotletochka_wifi_password
    hidden: true
    priority: 1
  
  #Точка в спальне
  - ssid: Kotletochka
    password: !secret kotletochka_wifi_password
    bssid: "50:ff:20:4b:10:73"
    priority: 1

  #Точка на кухне
  - ssid: Kotletochka
    password: !secret kotletochka_wifi_password
    bssid: "50:ff:20:4a:bf:cd"
    priority: 1

  #Основная точка
  - ssid: Kotletochka
    password: !secret kotletochka_wifi_password
    bssid: "50:ff:20:3c:2b:74"
    priority: 2
    
  ap:
    ssid: "${devicename}"
    password: !secret kotletochka_wifi_password

captive_portal:

logger:
  #level: NONE

api:
  password: !secret api_password
  reboot_timeout: 0s

ota:
  password: !secret ota_password

web_server:
  port: 80
  
binary_sensor:
  - platform: status
    name: "$devicename Status"
    id: status_connection
    internal: true
    on_state:
          then:
            - if:
                condition:
                    - binary_sensor.is_on: "status_connection"
                then:
                  - switch.turn_on: "blue_led"

            - if:
                condition:
                    - binary_sensor.is_off: "status_connection"
                then:
                  - switch.turn_off: "blue_led"
    
  - platform: gpio
    name: ${devicename}_Button
    pin:
      number: GPIO3
      mode: INPUT_PULLUP
      inverted: True
    on_press:
      - switch.toggle: relay

switch:
  - platform: gpio
    name: ${devicename}_Relay
    pin: GPIO14
    id: relay
    restore_mode: ALWAYS_ON
    on_turn_on:
      - switch.turn_on: "red_led"
    on_turn_off:
      - switch.turn_off: "red_led"

  - platform: gpio
    id: blue_led
    name: ${devicename}_LED_Blue
    icon: mdi:led-on
    restore_mode: ALWAYS_OFF
    pin: 
      number: GPIO1
      inverted: True

  - platform: gpio
    id: red_led
    name: ${devicename}_LED_Red
    icon: mdi:led-on
    restore_mode: ALWAYS_OFF
    pin: 
      number: GPIO13
      inverted: True

  - platform: restart
    name: "$devicename Restart"
  
  - platform: template
    name: "$devicename Reboot Powerload"
    turn_on_action:
          then:
            - if:
                condition:
                    - switch.is_on: "relay"
                then:
                    - switch.turn_off: "relay"
                    - delay: 5s
                    - switch.turn_on: "relay"

sensor:
  - platform: hlw8012
    sel_pin: 
      number: GPIO12
      inverted: True
    cf_pin: GPIO04
    cf1_pin: GPIO05
    current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    current:
      name: ${devicename}_Current
      icon: mdi:current-ac
      unit_of_measurement: A
    voltage:
      name: ${devicename}_V
      icon: mdi:flash-circle
      unit_of_measurement: V
    power:
      name: ${devicename}_W
      icon: mdi:flash-outline
      unit_of_measurement: W
    change_mode_every: 8
    update_interval: 10s
 
  - platform: uptime
    name: "$devicename Uptime Sensor"
    id: uptime_sec
    update_interval: 15s

  - platform: wifi_signal
    name: "$devicename WiFi RSSI"
    update_interval: 60s

text_sensor:
  - platform: wifi_info
    ssid:
      name: "${devicename} Connected SSID"
    bssid:
      name: "${devicename} Connected BSSID" 

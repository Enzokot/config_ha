substitutions:
  devicename: ble_tracker_livingroom
  nodename: ble-tracker-livingroom

external_components:
  - source: github://TheStaticTurtle/esphome_syslog
    components: [syslog]

esphome:
  name: $nodename
  comment: Monitoring HA state and BLE living room
  on_boot:
    priority: -10
    then:
      - lambda: 'id(weight_miscale).update();'

esp32:
  board: wemos_d1_mini32

wifi:
  #fast_connect: true
  networks:
  
#  - ssid: Kotletochka_Yi
#    password: !secret wifi_password
#    hidden: true
#    priority: 1
  
#  - ssid: Kotletochka_kit
#    password: !secret wifi_password
#    hidden: true
#    priority: 1
  
  #Точка в спальне
#  - ssid: Kotletochka
#    password: !secret wifi_password
#    bssid: "50:ff:20:4b:10:73"
#    priority: 1

  #Точка на кухне
  - ssid: Kotletochka
    password: !secret wifi_password
    bssid: "50:ff:20:4a:bf:cd"
    priority: 3

  #Основная точка
  - ssid: Kotletochka
    password: !secret wifi_password
    bssid: "50:ff:20:3c:2b:74"
    priority: 2
    
  ap:
    ssid: "${nodename}"
    password: !secret wifi_password

captive_portal:

# Enable logging
logger:
  #level: NONE
  #baud_rate: 0

syslog:
  ip_address: "kotletochka-ds.local"
    
# Enable Home Assistant API
api:  
  reboot_timeout: 0s

ota:
  password: !secret ota_password

time:
  - platform: sntp
    id: sntp_time
    servers: 'kotletochka.local'
    timezone: 'Europe/Moscow'

globals:
   - id: weight_global_float
     type: float
     restore_value: yes
     initial_value: '0.0'

switch:
  - platform: gpio
    id: onboard_led
    name: "${devicename}_On_Board_Led"
    pin:
      number: GPIO2
      mode: OUTPUT
    restore_mode: ALWAYS_OFF    

text_sensor:
  - platform: wifi_info
    ssid:
      name: "${devicename}_Connected_SSID"
    bssid:
      name: "${devicename}_Connected_BSSID" 

binary_sensor:
  - platform: status
    name: "${devicename}_Status"
    id: status_connection
    internal: true
    on_state:
          then:
            - if:
                condition:
                    - binary_sensor.is_on: "status_connection"
                then:
                  - switch.turn_on: "onboard_led"

            - if:
                condition:
                    - binary_sensor.is_off: "status_connection"
                then:
                  - switch.turn_off: "onboard_led"

esp32_ble_tracker:
  scan_parameters:
    #window: 48ms
    #interval: 512ms
    active: false

sensor:
  - platform: uptime
    name: "${devicename}_Uptime_Sensor"
    id: uptime_sec
    update_interval: 15s

  - platform: wifi_signal
    name: "${devicename}_WiFi_RSSI"
    update_interval: 60s
    
  - platform: xiaomi_lywsd02
    mac_address: !secret clock_bt_living_room_mac
    temperature:
      name: "ESP Xiaomi Living Room Temperature"
    humidity:
      name: "ESP Xiaomi Living Room Humidity"
    battery_level:
      name: "ESP Xiaomi Living Room Battery Level"

  - platform: xiaomi_lywsd02
    mac_address: !secret clock_bt_kitchen_mac
    temperature:
      name: "ESP Xiaomi Kitchen Temperature"
    humidity:
      name: "ESP Xiaomi Kitchen Humidity"
    battery_level:
      name: "ESP Xiaomi Kitchen Battery Level"

  - platform: xiaomi_miscale
    mac_address: !secret xiaomi_mi_scale_mac
    weight:
      id: weight_miscale_ble
      internal: true
      force_update: true
      on_value:
        then:
          - lambda: |-
              {id(weight_global_float) = x;}
          - lambda: 'id(weight_miscale).update();'

  - platform: template
    name: "ESP Xiaomi Mi Scale Weight"
    id: weight_miscale
    unit_of_measurement: 'kg'
    icon: mdi:weight-kilogram
    accuracy_decimals: 2
    update_interval: never
    force_update: true
    lambda: |-
      {return id(weight_global_float);}

button:
  - platform: restart
    name: ${devicename}_Restart

  - platform: safe_mode
    name: ${devicename}_Safe_Mode

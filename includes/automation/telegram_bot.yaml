
    - alias: reply pong to ping
      id: reply pong to ping
      initial_state: true
      mode: single
      max_exceeded: silent  
      trigger:
        platform: event
        event_type: telegram_command
        event_data:
          command: '/ping'
      action:
        - parallel:
            - action: notify.notify
              data:
                title: "ℹ️ Check notification's"
                message: pong
            - action: telegram_bot.delete_message
              data:
                chat_id: '{{ trigger.event.data.chat_id }}'
                message_id: '{{ trigger.event.data.id }}'
            - action: telegram_bot.send_message
              data:
                target: '{{ trigger.event.data.chat_id }}'
                message: >-
                          ℹ️ pong
            - action: notify.huawei_lte
              data:
                message: >-
                         ℹ️ pong
                target: !secret sms_phone_enzokot
                data:
                  url: 'http://192.168.8.1/'
            - action: notify.html5_notifier
              data:
                title: "ℹ️ Check notification's"
                message: pong
            - action: notify.email_enzokot_ha
              data:
                title: "ℹ️ Check notification's"
                message: pong

    - alias: keyboard tuc tuc gateway
      id: keyboard tuc tuc gateway
      initial_state: true
      mode: single
      max_exceeded: silent  
      trigger:
        platform: event
        event_type: telegram_command
        event_data:
          command: '/tuctuc'
      action:
        - parallel:
            - action: telegram_bot.delete_message
              data:
                chat_id: '{{ trigger.event.data.chat_id }}'
                message_id: '{{ trigger.event.data.id }}'
            - action: telegram_bot.send_message
              data:
                target: '{{ trigger.event.data.chat_id }}'
                message: >-
                       {{ '\U0001f4e2' }} С уровнем громкости:
                inline_keyboard:
                  - 'Тихо:/minlevelsound' 
                  - 'Средне:/avrlevelsound, Громко:/maxlevelsound'

    - alias: keyboard alarm home
      id: keyboard alarm home
      initial_state: true
      mode: single
      max_exceeded: silent
      trigger:
        platform: event
        event_type: telegram_command
        event_data:
          command: '/home_alarm'
      action:
        - action: telegram_bot.delete_message
          data:
            chat_id: '{{ trigger.event.data.chat_id }}'
            message_id: '{{ trigger.event.data.id }}'
        - action: telegram_bot.send_message
          data:
            target: '{{ trigger.event.data.chat_id }}'
            message: >-
                       {% if is_state('alarm_control_panel.signalka_shliuza_alarm', 'armed_away') -%}
                           {{ '\U0001f509' }} Сигнализация *включена*
                       {%- else -%}
                           {{ '\U0001f507' }} Сигнализация *выключена*
                       {%- endif %}
            inline_keyboard: >-
                              {% if is_state('alarm_control_panel.signalka_shliuza_alarm', 'armed_away') -%}
                                 Выключить:/alarm_home_disarm
                              {%- else -%}
                                 Включить:/alarm_home_arm
                              {%- endif %}

    - alias: do alarm change state
      id: do alarm change state
      initial_state: true
      mode: single
      max_exceeded: silent  
      trigger:
        - platform: event
          event_type: telegram_callback
          event_data:
            data: 
              '/alarm_home_disarm'
        - platform: event
          event_type: telegram_callback
          event_data:
            data: 
              '/alarm_home_arm'
      action:
        - action: telegram_bot.delete_message
          data:
            chat_id: '{{ trigger.event.data.chat_id }}'
            message_id: '{{ trigger.event.data.message.message_id }}'
        - action: >-
                     {% if trigger.event.data.command == '/alarm_home_disarm' -%}
                        alarm_control_panel.alarm_disarm
                     {%- else -%}
                        alarm_control_panel.alarm_arm_away
                     {%- endif %}
          data:
            entity_id: alarm_control_panel.signalka_shliuza_alarm
        - action: telegram_bot.answer_callback_query
          data:
            callback_query_id: '{{ trigger.event.data.id }}'
            message: >-
                     {% if trigger.event.data.command == '/alarm_home_disarm' -%}
                        Выключили сигнализацию
                     {%- else -%}
                        Включили сигнализацию
                     {%- endif %}

    - alias: do tuc tuc gateway
      id: do tuc tuc gateway
      initial_state: true
      mode: single
      max_exceeded: silent
      trigger:
        - platform: event
          event_type: telegram_callback
          event_data:
            data: '/minlevelsound'
        - platform: event
          event_type: telegram_callback
          event_data:
            data: '/avrlevelsound'
        - platform: event
          event_type: telegram_callback
          event_data:
            data: '/maxlevelsound'
      action:
        - parallel:
            - action: telegram_bot.delete_message
              data:
                chat_id: '{{ trigger.event.data.chat_id }}'
                message_id: '{{ trigger.event.data.message.message_id }}'
            - action: xiaomi_aqara.play_ringtone
              data:
                gw_mac: !secret gateway1_mac
                ringtone_id: 11
                ringtone_vol: >-
                    {%- if trigger.event.data.data == "/maxlevelsound"  -%}
                      50
                    {%- elif trigger.event.data.data == "/avrlevelsound" -%}
                      25
                    {%- else -%}
                      3
                    {%- endif -%}
        - action: telegram_bot.answer_callback_query
          data:
            callback_query_id: '{{ trigger.event.data.id }}'
            message: 'Постучали шлюзом'

    - alias: del keyboard sync yeelight ceiling to switch
      id: del keyboard sync yeelight ceiling to switch
      initial_state: true
      mode: single
      max_exceeded: silent  
      trigger:
        - platform: event
          event_type: telegram_callback
          event_data:
            data: '/changelight'
        - platform: event
          event_type: telegram_callback
          event_data:
            data: '/nochangelight'
        - platform: event
          event_type: telegram_callback
          event_data:
            data: '/ignoringchangelight'
      action:
        - action: telegram_bot.delete_message
          data:
            chat_id: '{{ trigger.event.data.chat_id }}'
            message_id: '{{ trigger.event.data.message.message_id }}'

    - alias: no key sync yeelight ceiling to switch
      id: no key sync yeelight ceiling to switch
      initial_state: true
      mode: single
      max_exceeded: silent  
      trigger:
        - platform: event
          event_type: telegram_callback
          event_data:
            data: '/nochangelight'
      action:
        - action: automation.turn_on
          entity_id: automation.sync_yeelight_ceiling_to_switch
        - action: telegram_bot.answer_callback_query
          data:
            callback_query_id: '{{ trigger.event.data.id }}'
            message: 'Проверим состояние позже'

    - alias: ignor key sync yeelight ceiling to switch
      id: ignor key sync yeelight ceiling to switch
      mode: single
      max_exceeded: silent  
      initial_state: true
      trigger:
        - platform: event
          event_type: telegram_callback
          event_data:
            data: '/ignoringchangelight'
      action:
        - action: telegram_bot.answer_callback_query
          data:
            callback_query_id: '{{ trigger.event.data.id }}'
            message: 'Отключили проверку'

    - alias: change keyboard sync yeelight ceiling to switch
      id: change keyboard sync yeelight ceiling to switch
      mode: single
      max_exceeded: silent  
      initial_state: true
      trigger:
        - platform: event
          event_type: telegram_callback
          event_data:
            data: '/changelight'
      condition:
          condition: or
          conditions:
            - condition: and
              conditions:
                - condition: state
                  entity_id: binary_sensor.0x158d0003f37a0f_contact
                  state: 'on'
                - condition: state
                  entity_id: light.yeelight_ceiling_cr
                  state: 'off'
            - condition: and
              conditions:
                - condition: state
                  entity_id: binary_sensor.0x158d0003f37a0f_contact
                  state: 'off'
                - condition: state
                  entity_id: light.yeelight_ceiling_cr
                  state: 'on'
      action:
        - parallel:
            - action: light.toggle
              entity_id: light.yeelight_ceiling_cr
            - action: automation.turn_on
              entity_id: automation.sync_yeelight_ceiling_to_switch
        - action: telegram_bot.answer_callback_query
          data:
            callback_query_id: '{{ trigger.event.data.id }}'
            message: 'Изменили состояние'

#Пылесос
    - alias: vacuum chita answer key find vacuum
      id: vacuum chita answer key find vacuum
      mode: single
      max_exceeded: silent  
      initial_state: true
      trigger:
        - platform: event
          event_type: telegram_callback
          event_data:
            data: '/findvacuum'
      action:
        - action: vacuum.locate
          entity_id: vacuum.xiaomi_vacuum_cleaner
        - action: telegram_bot.delete_message
          data:
            chat_id: '{{ trigger.event.data.chat_id }}'
            message_id: '{{ trigger.event.data.message.message_id }}'
        - action: telegram_bot.answer_callback_query
          data:
            callback_query_id: '{{ trigger.event.data.id }}'
            message: 'Включили поиск Степы'
            
    - alias: keyboard vacuum start cleaning
      id: keyboard vacuum start cleaning
      mode: single
      max_exceeded: silent  
      initial_state: true
      trigger:
        platform: event
        event_type: telegram_command
        event_data:
          command: '/vacuum'
      action:
        - action: telegram_bot.delete_message
          data:
            chat_id: '{{ trigger.event.data.chat_id }}'
            message_id: '{{ trigger.event.data.id }}'
        - action: telegram_bot.send_message
          data:
            target: '{{ trigger.event.data.chat_id }}'
            message: >-
                       {{ '\U0000231b' }} Отправить убирать:
            inline_keyboard:
              - 'Сейчас:/vacuumnow, Через 10 мин.:/vacuum10, Через 20 мин.:/vacuum20'
              - 'Отменить уборку:/vacuumcancel, Выслать карту:/sendmap'

    - alias: vacuum start cleaning
      id: vacuum start cleaning
      initial_state: true
      mode: single
      max_exceeded: silent  
      trigger:
        - platform: event
          event_type: telegram_callback
          event_data:
            data: '/vacuumnow'
      action:
        - action: vacuum.start
          entity_id: vacuum.xiaomi_vacuum_cleaner
        - action: telegram_bot.delete_message
          data:
            chat_id: '{{ trigger.event.data.chat_id }}'
            message_id: '{{ trigger.event.data.message.message_id }}'
        - action: telegram_bot.answer_callback_query
          data:
            callback_query_id: '{{ trigger.event.data.id }}'
            message: 'Пылесос отправили на уборку'

    - alias: vacuum later start cleaning
      id: vacuum later start cleaning
      initial_state: true
      mode: single
      max_exceeded: silent  
      trigger:
        - platform: event
          event_type: telegram_callback
          event_data:
            data: '/vacuum10'
        - platform: event
          event_type: telegram_callback
          event_data:
            data: '/vacuum20'
      action:
        - action: telegram_bot.delete_message
          data:
            chat_id: '{{ trigger.event.data.chat_id }}'
            message_id: '{{ trigger.event.data.message.message_id }}'
        - action: timer.start
          data:
            entity_id: timer.vacumm_ten_minutes
            duration: "{{ iif(trigger.event.data.data == '/vacuum10', 600, 1200, 1200) }}"
        - action: telegram_bot.answer_callback_query
          data:
            callback_query_id: '{{ trigger.event.data.id }}'
            message: "{{ 'Будет отправлен на уборку через ' + iif(trigger.event.data.data == '/vacuum10', '10 мин.', '20 мин.', '20 мин.') }}"
        - action: input_text.set_value
          data:
              entity_id: input_text.var_chat_id_vacuum_later_start
              value: '{{ trigger.event.data.chat_id }}'

    - alias: vacuum cancel cleaning
      id: vacuum cancel cleaning
      initial_state: true
      mode: single
      max_exceeded: silent  
      trigger:
        - platform: event
          event_type: telegram_callback
          event_data:
            data: '/vacuumcancel'
      action:
        - action: telegram_bot.delete_message
          data:
            chat_id: '{{ trigger.event.data.chat_id }}'
            message_id: '{{ trigger.event.data.message.message_id }}'
        - action: timer.cancel
          entity_id: timer.vacumm_ten_minutes
        - action: vacuum.pause
          entity_id: vacuum.xiaomi_vacuum_cleaner
        - delay:
            seconds: 3
        - action: vacuum.return_to_base
          entity_id: vacuum.xiaomi_vacuum_cleaner
        - action: telegram_bot.answer_callback_query
          data:
            callback_query_id: '{{ trigger.event.data.id }}'
            message: "Отменили таймеры, отправили на базу"
        - action: input_text.set_value
          data:
              entity_id: input_text.var_chat_id_vacuum_later_start
              value: !secret telegram_chita_chat_id

    - alias: vacuum send map
      id: vacuum send map
      initial_state: true
      mode: single
      max_exceeded: silent  
      trigger:
        - platform: event
          event_type: telegram_callback
          event_data:
            data: '/sendmap'
      action:
        - action: telegram_bot.delete_message
          data:
            chat_id: '{{ trigger.event.data.chat_id }}'
            message_id: '{{ trigger.event.data.message.message_id }}'
        - action: telegram_bot.send_photo
          data:
            target: '{{ trigger.event.data.chat_id }}'
            url: "{{- 'http://homeassistant.local.hass.io:8123' + state_attr('camera.roborock_vacuum_map', 'entity_picture') -}}"
            caption: >-
                   {{ '\U0001F5FA' }} *Степа* {{- '\n' -}} Текущая карта уборки

#Отправка данных по температуре
    - alias: send climate summary
      id: send climate summary
      initial_state: true
      mode: single
      max_exceeded: silent  
      trigger:
        platform: event
        event_type: telegram_command
        event_data:
          command: '/climate_summary'
      action:
        - action: telegram_bot.delete_message
          data:
            chat_id: '{{ trigger.event.data.chat_id }}'
            message_id: '{{ trigger.event.data.id }}'
        - action: telegram_bot.send_message
          data:
            target: '{{ trigger.event.data.chat_id }}'
            title: "{{ '\U0001F321' }} *Климатические сенсоры*"
            message: >-
                {% set temp_array = expand('group.temperature_summary_group_to_bot') | selectattr('state', 'defined') | selectattr('state', 'ne', None) %}
                {%- for state in temp_array -%}
                  {%- if loop.first -%}_Данные температуры_: {{-'\n'-}}{%- endif -%} {{- state.name -}}: *{{ states(state.entity_id, rounded=True) -}}*°C {%- if not loop.last -%}{{-'\n'-}} {%- endif -%} 
                {%- endfor %}

#Установка обновления по кнопке из уведомления по обновлению
    - alias: install update telegram bot
      id: install update telegram bot
      initial_state: true
      mode: parallel
      trigger:
        - platform: event
          event_type: telegram_callback
          event_data:
            command: '/installupdate'
      condition:
        - "{{ trigger.event.data['args'] | count > 0 }}"
      action:
        - variables:
            entity: "{{- trigger.event.data['args'][0] -}}"
            friendlyname: "{{- state_attr(trigger.event.data['args'][0], 'friendly_name') | replace(' Update', '') -}}"
        - choose:
            - conditions: "{{ is_state(entity, 'on') and is_state_attr(entity, 'in_progress', false) }}"
              sequence:
                - action: telegram_bot.answer_callback_query
                  data:
                    callback_query_id: '{{ trigger.event.data.id }}'
                    message: >-
                        Обновление на версию {{ state_attr(entity, 'latest_version') }} {{ friendlyname }} запущено.
                - action: update.install
                  data:
                    entity_id: "{{- entity -}}"
                    backup: "{{ state_attr(entity, 'supported_features') | int(0) >= 8 }}"
          default:
            - action: telegram_bot.answer_callback_query
              data:
                callback_query_id: '{{ trigger.event.data.id }}'
                message: >-
                    Обновление {{ friendlyname }} уже установлено.

#Датчик открытия входной двери    
    - alias: notification front door open long time
      id: notification front door open long time
      initial_state: true
      trigger:
        platform: state
        entity_id: binary_sensor.0x00158d000359304c_contact
        from: 'off'
        to: 'on'
        for:
          minutes: 2
      action:
        - service: notify.telegram_enzokot_to_bot
          data:
            title: >-
                   {{ '\U000026a0' }} *Датчик открытия/закрытия*
            message: >-
                     Входная дверь: открыта более 2 минут
            # data:
            #     inline_keyboard:
            #       - 'Открыть:/open, Отклонить:/reject'
            #       - '-'
        - choose:
            - conditions:
                - condition: state
                  entity_id: media_player.lg_smart_tv
                  state: 'on'
              sequence:
                - service: notify.lg_smart_tv
                  data:
                    message: 'Входная дверь: открыта более 2 минут'

    - alias: notification lobby door open long time
      id: notification lobby door open long time
      initial_state: true
      trigger:
        - platform: state
          id: 'door_open'
          entity_id: binary_sensor.lobby_door_open_long_time
          from: 'off'
          to: 'on'
        - platform: state
          id: 'door_close'
          entity_id: binary_sensor.lobby_door_open_long_time
          from: 'on'
          to: 'off'
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_all_chat_id
            disable_notification: true
            title: >-
                   {% if trigger.id == 'door_open' -%} {{ '\U0001F513' }} {%- else -%} {{ '\U0001f510' }} {%- endif %} *Датчик открытия/закрытия*
            message: >-
                     Тамбурная дверь: {% if trigger.id == 'door_open' -%} открыта более 5 минут {%- else -%} закрыта {% endif -%}

    - alias: notification sound front door open long time
      id: notification sound front door open long time
      initial_state: true
      trigger:
        platform: state
        entity_id: binary_sensor.0x00158d000359304c_contact
        from: 'off'
        to: 'on'
        for:
          minutes: 2
      condition:
          - condition: state
            entity_id: input_boolean.alarm_gateway_button
            state: 'off'
          - condition: state
            entity_id: alarm_control_panel.signalka_shliuza_alarm
            state: 'disarmed'
          - condition: or
            conditions:
              - condition: time
                after: '9:00:00'
                before: '14:00:00'
              - condition: time
                after: '17:30:00'
                before: '21:00:00'
      action:
          - service: timer.start
            entity_id: timer.front_door_ringtone
          - service: xiaomi_aqara.play_ringtone
            data:
              gw_mac: !secret gateway1_mac
              ringtone_id: 10004
              ringtone_vol: 25

    - alias: notification sound front door open long time repeat
      id: notification sound front door open long time repeat
      initial_state: true
      trigger:
           - platform: event
             event_type: timer.finished
             event_data:
               entity_id: timer.front_door_ringtone
      action:
          - service: timer.start
            entity_id: timer.front_door_ringtone
          - service: xiaomi_aqara.play_ringtone
            data:
              gw_mac: !secret gateway1_mac
              ringtone_id: 10004
              ringtone_vol: 40

    - alias: notification sound front door open long time cancel
      id: notification sound front door open long time cancel
      initial_state: true
      trigger:
           - platform: time
             at: "14:00:00"
           - platform: time
             at: "21:00:00"
           - platform: state
             id: "binary_sensor_trigger"
             entity_id: binary_sensor.0x00158d000359304c_contact
             from: 'on'
             to: 'off'
      condition:
            condition: state
            entity_id: timer.front_door_ringtone
            state: 'active'
      action:
          - service: timer.cancel
            entity_id: timer.front_door_ringtone
          - choose:
              - conditions: "{{ trigger.id == 'binary_sensor_trigger' }}"
                sequence:            
                  - service: xiaomi_aqara.stop_ringtone
                    data:
                      gw_mac: !secret gateway1_mac            

    - alias: notification front door open
      id: notification front door open
      initial_state: true
      trigger:
        - platform: state
          entity_id: binary_sensor.0x00158d000359304c_contact
          from: 'off'
          to: 'on'
    #   condition:
    #     condition: time
    #     after: '7:00:00'
    #     before: '21:00:00'
    #     weekday:
    #       - mon
    #       - tue
    #       - wed        
    #       - thu
    #       - fri
      action:
        - service: telegram_bot.send_message
          data:
              title: >-
                     {{ '\U0001F6AA' }} *Датчик открытия/закрытия*
              message: >-
                       Входная дверь: открыта
              disable_notification: true
              target: !secret telegram_enzokot_chat_id
        - choose:
            - conditions:
                - condition: state
                  entity_id: media_player.lg_smart_tv
                  state: 'on'
              sequence:
                - service: notify.lg_smart_tv
                  data:
                    message: 'Входная дверь: открыта'

    - alias: notification front door close
      id: notification front door close
      initial_state: true
      trigger:
        - platform: state
          entity_id: binary_sensor.0x00158d000359304c_contact
          from: 'on'
          to: 'off'
    #   condition:
    #     condition: time
    #     after: '7:00:00'
    #     before: '21:00:00'
    #     weekday:
    #       - mon
    #       - tue
    #       - wed        
    #       - thu
    #       - fri
      action:
        - service: telegram_bot.send_message
          data:
              title: >-
                     {{ '\U0001f510' }} *Датчик открытия/закрытия*
              message: >-
                       Входная дверь: закрыта
              disable_notification: true
              target: !secret telegram_enzokot_chat_id
        - choose:
            - conditions:
                - condition: state
                  entity_id: media_player.lg_smart_tv
                  state: 'on'
              sequence:
                - service: notify.lg_smart_tv
                  data:
                    message: 'Входная дверь: закрыта'

    - alias: notification front door open armed
      id: notification front door open armed
      initial_state: true
      trigger:
        - platform: state
          entity_id: binary_sensor.0x00158d000359304c_contact
          to: 'on'
      condition:
        - condition: state
          entity_id: alarm_control_panel.signalka_shliuza_alarm
          state: 'armed_away'
      action:
        - variables:
              sm_g973f_rezhim_zvonka: >-
                                     {{ states('sensor.sm_g973f_ringer_mode') }}
              sm_g973f_rezhim_ne_bespokoit: >-
                                            {{ states('sensor.sm_g973f_do_not_disturb_sensor') }}
        - service: notify.notify
          data:
              message: 'command_ringer_mode'
              title: 'normal'
        - service: telegram_bot.send_message
          data:
            title: >-
                   {{ '\U0001f6a8' }} *Сигнализация*
            message: >-
                     Обнаружено вскрытие {{ trigger.to_state.attributes.friendly_name }} при включенной сигнализации
            target: !secret telegram_all_chat_id
        - service: notify.notify
          data:
            title: "{{ '\U0001f6a8' }} Сигнализация"
            message: >-
                     Обнаружено вскрытие {{ trigger.to_state.attributes.friendly_name }} при включенной сигнализации
            data:
              ttl: 0
              priority: high
              channel: alarm_stream
              actions:
                - action: "stop_alarm"
                  title: "Выключить сирену"
        - service: notify.huawei_lte
          data:
            message: >-
                     {{ '\U0001f6a8' }} Обнаружено вскрытие {{ trigger.to_state.attributes.friendly_name }} при включенной сигнализации
            target: !secret sms_phone_all
            data:
              url: 'http://192.168.8.1/'
        - service: notify.mobile_app_sm_g973f
          data:
              message: 'command_ringer_mode'
              title: >-
                        {{ sm_g973f_rezhim_zvonka }}
        - service: notify.mobile_app_sm_g973f
          data:
              message: 'command_dnd'
              title: >-
                        {{ sm_g973f_rezhim_ne_bespokoit }}

    - alias: notification motion detected armed
      id: notification motion detected armed
      initial_state: true
      mode: queued
      trigger:
        - platform: state
          entity_id: 
             - binary_sensor.0x00158d00054b8d72_occupancy
             - binary_sensor.0x00158d000566bde7_occupancy
             - binary_sensor.0x00158d0003953ee9_occupancy
          to: 'on'
      condition:
        - condition: state
          entity_id: alarm_control_panel.signalka_shliuza_alarm
          state: 'armed_away'
      action:
        - variables:
              sm_g973f_rezhim_zvonka: >-
                                     {{ states('sensor.sm_g973f_ringer_mode') }}
              sm_g973f_rezhim_ne_bespokoit: >-
                                     {{ states('sensor.sm_g973f_do_not_disturb_sensor') }}
        - service: notify.notify
          data:
              message: 'command_ringer_mode'
              title: 'normal'
        - service: telegram_bot.send_message
          data:
            title: >-
                   {{ '\U0001f6a8' }} *Сигнализация*
            message: >-
                     Обнаружено движение _{{ trigger.to_state.attributes.friendly_name }}_ при включенной сигнализации
            target: !secret telegram_all_chat_id
        - service: notify.notify
          data:
            title: "{{ '\U0001f6a8' }} Сигнализация"
            message: >-
                     Обнаружено движение {{ trigger.to_state.attributes.friendly_name }} при включенной сигнализации
            data:
              ttl: 0
              priority: high
              channel: alarm_stream
              actions:
                - action: "stop_alarm"
                  title: "Выключить сирену"
        - service: notify.huawei_lte
          data:
            message: >-
                     {{ '\U0001f6a8' }} Обнаружено движение {{ trigger.to_state.attributes.friendly_name }} при включенной сигнализации
            target: !secret sms_phone_all
            data:
              url: 'http://192.168.8.1/'
        - service: notify.mobile_app_sm_g973f
          data:
              message: 'command_ringer_mode'
              title: >-
                        {{ sm_g973f_rezhim_zvonka }}
        - service: notify.mobile_app_sm_g973f
          data:
              message: 'command_dnd'
              title: >-
                        {{ sm_g973f_rezhim_ne_bespokoit }}

    - alias: notification open window armed
      id: notification open window armed
      initial_state: true
      mode: queued
      trigger:
        - platform: state
          entity_id: 
             - group.window_bed_room_group
             - group.window_childrens_room_group
             - group.window_living_room_group
             - group.window_kitchen_group
          to: 'on'
      condition:
        - condition: state
          entity_id: alarm_control_panel.signalka_shliuza_alarm
          state: 'armed_away'
      action:
        - variables:
              sm_g973f_rezhim_zvonka: >-
                                     {{ states('sensor.sm_g973f_ringer_mode') }}
              sm_g973f_rezhim_ne_bespokoit: >-
                                     {{ states('sensor.sm_g973f_do_not_disturb_sensor') }}
        - service: notify.notify
          data:
              message: 'command_ringer_mode'
              title: 'normal'
        - service: telegram_bot.send_message
          data:
            title: >-
                   {{ '\U0001f6a8' }} *Сигнализация*
            message: >-
                     Обнаружено вскрытие окна _{{ trigger.to_state.attributes.friendly_name }}_ при включенной сигнализации
            target: !secret telegram_all_chat_id
        - service: notify.notify
          data:
            title: "{{ '\U0001f6a8' }} Сигнализация"
            message: >-
                     Обнаружено вскрытие окна {{ trigger.to_state.attributes.friendly_name }} при включенной сигнализации
            data:
              ttl: 0
              priority: high
              channel: alarm_stream
              actions:
                - action: "stop_alarm"
                  title: "Выключить сирену"
        - service: notify.huawei_lte
          data:
            message: >-
                     {{ '\U0001f6a8' }} Обнаружено вскрытие окна {{ trigger.to_state.attributes.friendly_name }} при включенной сигнализации
            target: !secret sms_phone_all
            data:
              url: 'http://192.168.8.1/'
        - service: notify.mobile_app_sm_g973f
          data:
              message: 'command_ringer_mode'
              title: >-
                        {{ sm_g973f_rezhim_zvonka }}
        - service: notify.mobile_app_sm_g973f
          data:
              message: 'command_dnd'
              title: >-
                        {{ sm_g973f_rezhim_ne_bespokoit }}

#Пылесос
    - alias: vacuum cleaner error to all
      id: vacuum cleaner error to all
      initial_state: true
      trigger:
       - platform: state
         entity_id: sensor.vacuum_cleaner_status_sensor
         to: 
           - 'Error'
           - 'In Error'
           - 'Charging Error'
      action:
        - service: telegram_bot.send_photo
          data:
            target: !secret telegram_all_chat_id
            url: "{{- states('sensor.instance_internal_url_config') + state_attr('camera.roborock_vacuum_map', 'entity_picture') -}}"
            caption: >-
                   {{ '\U000026a0' }} *Степа* {{- '\n' -}} Похоже я застрял или какая то другая ошибка
            inline_keyboard:
              - 'Найти меня (громко):/findvacuum'
        - choose:
            - conditions:
                - condition: state
                  entity_id: media_player.lg_smart_tv
                  state: 'on'
              sequence:
                - service: notify.lg_smart_tv
                  data:
                    message: 'Степа: мне нужна помощь'

    - alias: vacuum cleaner after cleaning chita
      id: vacuum cleaner after cleaning chita
      initial_state: true
      trigger:
       - platform: state
         entity_id: vacuum.xiaomi_vacuum_cleaner
         from: 'returning'
         to: 'docked'
      condition:
          condition: template
          value_template: "{{ (state_attr('vacuum.xiaomi_vacuum_cleaner', 'total_cleaned_area') | int) > (states('input_number.total_cleaned_area_saved') | int) + 30 }}"
      action:
        - service: telegram_bot.send_photo
          data:
            target: !secret telegram_chita_chat_id
            url: "{{- states('sensor.instance_internal_url_config') + state_attr('camera.roborock_vacuum_map', 'entity_picture') -}}"
            caption: >-
                   {{ '\U0001f4af' }} *Степа* {{- '\n' -}} Вернулся на базу, нужно снять танк с водой и заглянуть в контейнер пылесборника
        - service: input_number.set_value
          data:
            entity_id: input_number.total_cleaned_area_saved
            value: >-
                   {{ (state_attr('vacuum.xiaomi_vacuum_cleaner', 'total_cleaned_area') | int) }}
        - choose:
            - conditions:
                - condition: state
                  entity_id: media_player.lg_smart_tv
                  state: 'on'
              sequence:
                - service: notify.lg_smart_tv
                  data:
                    message: 'Степа: вернулся на базу'

#Датчики дыма
    - alias: smoke detector alarm
      id: smoke detector alarm
      initial_state: true
      trigger:
       - platform: state
         entity_id: 
           - binary_sensor.0x00158d0003943639_smoke
           - binary_sensor.0x00158d00039a8358_smoke
           - binary_sensor.0x00158d00039d9398_smoke
           - binary_sensor.0x00158d00045ca483_smoke
           - binary_sensor.0x00158d00045cd551_smoke
         to: 'on'
      action:
        - variables:
              sm_g973f_rezhim_zvonka: >-
                                     {{ states('sensor.sm_g973f_ringer_mode') }}
              sm_g973f_rezhim_ne_bespokoit: >-
                                            {{ states('sensor.sm_g973f_do_not_disturb_sensor') }}
        - service: notify.notify
          data:
              message: 'command_ringer_mode'
              title: 'normal'
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_all_chat_id
            title: >-
                     {{ '\U0001f6a8' }} *Датчик дыма*
            message: >-
                        Сработали датчики:
                        {{ '\n' }}
                        {%- if is_state('binary_sensor.0x00158d0003943639_smoke', 'on') -%}
                           _Кухня_
                        {{- '\n' }}
                        {%- endif -%} 
                        {%- if is_state('binary_sensor.0x00158d00039a8358_smoke', 'on') -%}
                           _Гостиная_
                        {{- '\n' }}
                        {%- endif -%}
                        {% if is_state('binary_sensor.0x00158d00039d9398_smoke', 'on') -%}
                           _Коридор_
                        {{- '\n' }}
                        {%- endif -%}
                        {% if is_state('binary_sensor.0x00158d00045ca483_smoke', 'on') -%}
                           _Детская_
                        {{- '\n' }}
                        {%- endif -%}
                        {%- if is_state('binary_sensor.0x00158d00045cd551_smoke', 'on') -%}
                           _Спальня_
                        {{- '\n' }}
                        {%- endif -%}
        - service: notify.notify
          data:
            data:
              ttl: 0
              priority: high
              channel: alarm_stream
              actions:
                - action: "stop_alarm"
                  title: "Выключить сирену"
            title: "{{ '\U0001f6a8' }} Датчик дыма"
            message: >-
                        Сработали датчики:
                        {{ '\n' }}
                        {%- if is_state('binary_sensor.0x00158d0003943639_smoke', 'on') -%}
                           Кухня
                        {{- '\n' }}
                        {%- endif -%} 
                        {%- if is_state('binary_sensor.0x00158d00039a8358_smoke', 'on') -%}
                           Гостиная
                        {{- '\n' }}
                        {%- endif -%}
                        {% if is_state('binary_sensor.0x00158d00039d9398_smoke', 'on') -%}
                           Коридор
                        {{- '\n' }}
                        {%- endif -%}
                        {% if is_state('binary_sensor.0x00158d00045ca483_smoke', 'on') -%}
                           Детская
                        {{- '\n' }}
                        {%- endif -%}
                        {%- if is_state('binary_sensor.0x00158d00045cd551_smoke', 'on') -%}
                           Спальня
                        {{- '\n' }}
                        {%- endif -%}
        - service: notify.huawei_lte
          data:
            message: >-
                        {{ '\U0001f6a8' }} Сработали датчики дыма:
                        {{ '\n' }}
                        {%- if is_state('binary_sensor.0x00158d0003943639_smoke', 'on') -%}
                           Кухня
                        {{- '\n' }}
                        {%- endif -%} 
                        {%- if is_state('binary_sensor.0x00158d00039a8358_smoke', 'on') -%}
                           Гостиная
                        {{- '\n' }}
                        {%- endif -%}
                        {% if is_state('binary_sensor.0x00158d00039d9398_smoke', 'on') -%}
                           Коридор
                        {{- '\n' }}
                        {%- endif -%}
                        {% if is_state('binary_sensor.0x00158d00045ca483_smoke', 'on') -%}
                           Детская
                        {{- '\n' }}
                        {%- endif -%}
                        {%- if is_state('binary_sensor.0x00158d00045cd551_smoke', 'on') -%}
                           Спальня
                        {{- '\n' }}
                        {%- endif -%}
            target: !secret sms_phone_all
            data:
              url: 'http://192.168.8.1/'
        - service: notify.mobile_app_sm_g973f
          data:
              message: 'command_ringer_mode'
              title: >-
                        {{ sm_g973f_rezhim_zvonka }}
        - service: notify.mobile_app_sm_g973f
          data:
              message: 'command_dnd'
              title: >-
                        {{ sm_g973f_rezhim_ne_bespokoit }}

#Срок сертификата SSL менее 5 дней
    - alias: notification cert expired
      id: notification cert expired
      initial_state: true
      trigger:
        - platform: state
          entity_id: binary_sensor.cert_expired_keenetic_domain
          from: 'off'
          to: 'on'
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            title: >-
                     {{ '\U000026a0' }} *Сертификат SSL*
            message: >-
                        {%- set entity_name = trigger.entity_id | regex_replace('binary_', '') | regex_replace('_expired_', '_expiry_') -%}
                        Срок действия сертификата для _{{ trigger.to_state.name -}}_: *{{- states(entity_name) -}}* дн.

#Новая версия НА
    - alias: update HA available notification
      id: update HA available notification
      initial_state: true
      trigger:
        - platform: state
          entity_id: sensor.latest_version_ha
      condition:
        - condition: template
          value_template: >
            {% set ignore = ['unknown', 'unavailable', 'none'] %}
            {{ trigger.from_state.state not in ignore and
               trigger.to_state.state not in ignore and
               trigger.to_state.state != trigger.from_state.state and
               is_state('binary_sensor.new_version_ha', 'on')
            }}
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            title: "{{ '\U0001f389' }} *Системное обновление*"
            message: "Доступна [{{ states('sensor.latest_version_ha') }}](https://github.com/home-assistant/core/releases/tag/{{- states('sensor.latest_version_ha') }}) версия Core для установки, текущая *{{ states('sensor.current_version_ha') }}*."
            disable_web_page_preview: true

#Новая версия Supervisor
    - alias: update Supervisor available notification
      id: update Supervisor available notification
      initial_state: true
      trigger:
        - platform: state
          entity_id: sensor.latest_version_ha
          attribute: supervisor
      condition:
        - condition: template
          value_template: >
            {% set ignore = ['unknown', 'unavailable', 'none'] %}
            {{ trigger.from_state.state not in ignore and
               trigger.to_state.state not in ignore and
               trigger.to_state.attributes.supervisor != trigger.from_state.attributes.supervisor and
               is_state('binary_sensor.new_version_supervisor', 'on')
            }}
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            title: "{{ '\U0001f389' }} *Системное обновление*"
            message: "Доступна [{{ state_attr('sensor.latest_version_ha', 'supervisor') }}](https://github.com/home-assistant/supervisor/releases/tag/{{- state_attr('sensor.latest_version_ha', 'supervisor') }}) версия Supervisor для установки, текущая *{{ state_attr('sensor.supervisor_versions', 'current_version') }}*."
            disable_web_page_preview: true

    - alias: Supervisor updated notification
      id: Supervisor updated notification
      initial_state: true
      trigger:
        - platform: state
          entity_id: sensor.supervisor_current_version
      condition:
        - condition: template
          value_template: >
            {% set ignore = ['unknown', 'unavailable', 'none', None, null, ''] %}
            {{ trigger.from_state.state not in ignore and
               trigger.to_state.state not in ignore and
               trigger.to_state.state != trigger.from_state.state
            }}
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            title: "{{ '\U00002705' }} *Системное обновление*"
            message: "Supervisor обновлен с версии [{{ trigger.from_state.state }}](https://github.com/home-assistant/supervisor/releases/tag/{{- trigger.from_state.state -}}) на [{{ trigger.to_state.state }}](https://github.com/home-assistant/supervisor/releases/tag/{{- trigger.to_state.state -}})"
            disable_web_page_preview: true

#Доступны для обновления аддоны Supervisor
    - alias: update Supervisor addons available notification
      id: update Supervisor addons available notification
      initial_state: true
      trigger:
        - platform: state
          entity_id: sensor.supervisor_versions
      condition:
        - condition: template
          value_template: >
            {% set ignore = ['unknown', 'unavailable', 'none'] %}
            {{ trigger.from_state.state not in ignore and
               trigger.to_state.state not in ignore and
               trigger.to_state.state != trigger.from_state.state and
               is_state('binary_sensor.new_version_ha_addons', 'on')
            }}
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            title: "{{ '\U0001f389' }} *Системное обновление*"
            message: "Addons's Supervisor - доступно для обновления *{{ states('sensor.supervisor_versions') | int }}*. Список: {% for repo in state_attr('sensor.supervisor_versions', 'addons') %}*{{ repo.name }}* (_{{ repo.version }}_ -> _{{ repo.version_latest }}_){%if not loop.last %}, {%endif%}{% endfor %}"

#Доступны для обновления аддоны HACS
    - alias: update HACS addons available notification
      id: update HACS addons available notification
      initial_state: true
      trigger:
        - platform: state
          entity_id: sensor.hacs
      condition:
        - condition: template
          value_template: >
            {% set ignore = ['unknown', 'unavailable', 'none'] %}
            {{ trigger.from_state.state not in ignore and
               trigger.to_state.state not in ignore and
               trigger.to_state.state != trigger.from_state.state and
               is_state('binary_sensor.new_version_hacs_addons', 'on')
            }}
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            title: "{{ '\U0001f389' }} *Системное обновление*"
            message: "Addons's HACS - доступно для обновления *{{ states('sensor.hacs') | int }}*. Список: {% for repo in state_attr('sensor.hacs', 'repositories') %}*{{ repo.display_name }}* (_{{ repo.installed_version }}_ -> _{{ repo.available_version }}_){%if not loop.last %}, {%endif%}{% endfor %}"

#Низкий заряд батарей
    - alias: notification low battery zigbee
      id: notification low battery zigbee
      initial_state: true
      trigger:
        platform: time
        at: "20:00:00"
      condition: >
                    {%- set entities = expand('group.dynamic_group_sensor_battery') -%}
                    {%- set datanames = namespace(entity_name=[]) -%}
                    {% for x in entities -%}
                      {% if (not x.entity_id.endswith("_low_battery") and x.state | int <= 20) or (x.entity_id.endswith("_low_battery") and x.state | string == 'on') -%}
                        {% set datanames.entity_name = datanames.entity_name + ['_' + x.name + '_'] -%}
                      {% endif %}
                    {%- endfor %}
                    {{ datanames.entity_name | list | count > 0 }}
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            title: >-
                     {{ '\U0001f50b' -}} *Низкий заряд*
            message: >-
                        Для устройств:
                        {{- '\n' -}}
                        {%- set entities = expand('group.dynamic_group_sensor_battery') -%}
                        {%- set datanames = namespace(entity_name=[]) -%}
                        {% for x in entities -%}
                          {% if (not x.entity_id.endswith("_low_battery") and x.state | int <= 20) or (x.entity_id.endswith("_low_battery") and x.state | string == 'on') -%}
                            {% set datanames.entity_name = datanames.entity_name + ['_' + x.name + '_'] -%}
                          {% endif %}
                        {%- endfor %}
                        {{- datanames.entity_name | list | join(', \n') }}

#После рестарта НА остался включенный обогреватель
    - alias: notification safety sockets on restart
      id: notification safety sockets on restart
      initial_state: true
      trigger:
        - platform: homeassistant
          event: start
      condition:
        - condition: state
          entity_id: switch.0x842e14fffe5047f5
          state: 'on'          
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            title: >-
                     {{ '\U0001f50c' }} *Управляемые розетки*
            message: >-
                        После перезапуска НА осталась включена розетка обогревателя.

#Уведомление от розеток при превышении 3кВт
    - alias: notification safety sockets off
      id: notification safety sockets off
      initial_state: true
      trigger:
          - platform: numeric_state
            entity_id: 
                - sensor.0x842e14fffe5047f5_power
                - sensor.0x842e14fffe13a854_power
                - sensor.0x588e81fffeff5c4f_power
                - sensor.0x842e14fffe36661f_power
                - sensor.server_ac_power_socket_w
                - sensor.0x60a423fffef8d41a_power
            above: 3000
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            title: >-
                     {{ '\U000026a0' }} *Управляемые розетки*
            message: >-
                        Сработала защита по превышению потребления для розетки:
                        {{ '\n' }}
                        _{{ trigger.to_state.name }}_

#Уведомление о смене Public IP
    - alias: notification public ip changed
      id: notification public ip changed
      initial_state: true
      trigger:
          - platform: state
            entity_id: sensor.myip
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            title: >-
                     {{ '\U0001f4f6' }} *Трекинг устройств*
            message: >-
                    {%- if trigger.from_state.state in ['unavailable', 'unknown', ''] -%}
                        Внешний IP-адрес определен `{{ trigger.to_state.state }}`
                    {%- else -%}
                        Внешний IP-адрес изменен с `{{ trigger.from_state.state }}` на `{{ trigger.to_state.state }}`
                    {%- endif -%}
        - service: notify.notify
          data:
            title: >-
                     {{ '\U0001f4f6' }} Трекинг устройств
            message: >-
                    {%- if trigger.from_state.state in ['unavailable', 'unknown', ''] -%}
                        Внешний IP-адрес определен {{ trigger.to_state.state }}
                    {%- else -%}
                        Внешний IP-адрес изменен с {{ trigger.from_state.state }} на {{ trigger.to_state.state }}
                    {%- endif -%}
        - choose:
            - conditions:
                - condition: state
                  entity_id: media_player.lg_smart_tv
                  state: 'on'
              sequence:
                - service: notify.lg_smart_tv
                  data:
                    message: 'Интернет: возможно переключились на LTE'

#Уведомление при низком уровне воды
    - alias: notification low level water
      id: notification low level water
      initial_state: true
      trigger:
        - platform: state
          entity_id: sensor.zhimi_humidifier_cb1_low_water_level
          from: 'off'
          to: 'on'
        - platform: state
          entity_id: sensor.zhimi_humidifier_ca4_low_water_level
          from: 'off'
          to: 'on'
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_all_chat_id
            title: >-
                     {{ '\U0001F6B0' }} *Увлажнители*
            message: >-
                    Пора залить воду в увлажнитель: _{{- device_attr(trigger.entity_id, 'name') -}}_
        - choose:
            - conditions:
                - condition: state
                  entity_id: media_player.lg_smart_tv
                  state: 'on'
              sequence:
                - service: notify.lg_smart_tv
                  data:
                    message: >-
                        Нет воды: _{{- device_attr(trigger.entity_id, 'name') -}}_

#Уведомление обслуживания пылесоса
    - alias: notification vacuum maintenance
      id: notification vacuum maintenance
      initial_state: true
      mode: queued
      trigger:
        - platform: state
          entity_id: 
            - binary_sensor.vacuum_cleaner_main_brush_maintenance
            - binary_sensor.vacuum_cleaner_side_brush_maintenance
            - binary_sensor.vacuum_cleaner_filter_maintenance
            - binary_sensor.vacuum_cleaner_sensor_dirty_maintenance
          from: 'off'
          to: 'on'
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_all_chat_id
            title: >-
                     {{ '\U0001F527' }} *Степа*
            message: >-
                    Необходимо провести обслуживание: _{{- trigger.to_state.name -}}_

#Уведомления по напряжению сети
    - alias: notifications control voltage
      id: notifications control voltage
      initial_state: true
      mode: queued
      trigger:
        - platform: numeric_state
          entity_id: sensor.0x842e14fffe13a854_voltage
          above: 250
        - platform: numeric_state
          entity_id: sensor.0x842e14fffe13a854_voltage
          below: 180
        - platform: numeric_state
          entity_id: sensor.0x842e14fffe13a854_voltage
          above: 179.9
          below: 250.1
      condition:
        - condition: template
          value_template: >- 
                    {{ trigger.from_state.state not in ['unavailable', 'unknown', ''] and
                        (
                        trigger.above == None or trigger.below == None or
                        (trigger.from_state.state | float >= trigger.below
                        or trigger.from_state.state | float <= trigger.above)
                        )
                    }}
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            title: >-
                     {% if trigger.above != None and trigger.below != None  %} {{ '\U00002705' }} {% else %} {{ '\U000026a0' }} {% endif -%} *Контроль напряжения*
            message: >-
                     {% if trigger.above != None and trigger.below == None and trigger.to_state.state | float >= trigger.above | float %}
                        Обнаружено *повышенное* напряжение сети {{ trigger.to_state.state }}В
                     {% elif trigger.above == None and trigger.below != None and trigger.to_state.state | float <= trigger.below | float %}
                        Обнаружено *пониженное* напряжение сети {{ trigger.to_state.state }}В
                     {% else %}
                        В сети *нормальное* напряжение {{ trigger.to_state.state }}В
                     {% endif %}

#Уведомление об успешном бекапе
    - alias: notifications backup db info
      id: notifications backup db info
      mode: queued
      trigger:
        - platform: state
          entity_id: sensor.last_backup_db_homeassistant
      condition:
        - condition: template
          value_template: >- 
            {{ 
               trigger.from_state.state not in ['unavailable', 'unknown', ''] 
               and trigger.to_state.state not in ['unavailable', 'unknown', '', '10']
            }}
      action:
        - service: homeassistant.update_entity
          entity_id: sensor.disk_use_percent
        - wait_for_trigger:
            - platform: state
              entity_id: sensor.disk_use_percent
          timeout: 
              seconds: 10
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            title: >-
                  {% if trigger.to_state.state == '2' or trigger.to_state.state == '11' %} {{ '\U000026D4' }} {% elif trigger.to_state.state == '3' or trigger.to_state.state == '12' %} {{ '\U000026A0' }} {%- else %} {{ '\U0001F4BD' }} {%- endif %} *Резервное копирование БД*
            message: >-
                  {% if trigger.to_state.state == '2' %}
                     Бекап Maria DB не создан
                  {% elif trigger.to_state.state == '11' %}
                     Бекап Influx DB не создан
                  {% elif trigger.to_state.state == '3' %}
                     Создан бекап Maria DB и Influx DB, но архивирование не удалось. Системный диск заполнен на *{{ states('sensor.disk_use_percent') -}}*%
                  {% elif trigger.to_state.state == '12' %}
                     Создан бекап Influx DB, но перемещение файлов не удалось выполнить. Системный диск заполнен на *{{ states('sensor.disk_use_percent') -}}*%
                  {% else %}
                     Создана и упакована резервная копия с именем файла `{{ trigger.to_state.state -}}.7z`, системный диск заполнен на *{{ states('sensor.disk_use_percent') -}}*%
                  {% endif %}

#Уведоление о неуспешном входе или о блокировки IP по неуспешным логинам
    - alias: notifications failed login or block IP
      id: notifications failed login or block IP
      mode: parallel
      initial_state: true
      trigger:
        - platform: state
          entity_id: 
           - persistent_notification.ip_ban
           - persistent_notification.http_login
          to: 'notifying'
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            title: >-
                {%- if 'with invalid authentication' in trigger.to_state.attributes.message | lower %}
                    {{- '\U0001F6AB' -}}
                {% else %}
                    {{- '\U0001F6AB' -}}
                {% endif %} *Вход в систему*
            message: >
                {% set ipadress = trigger.to_state.attributes.message.split('from ')[1] | regex_replace('\s+.*') %}
                {% if 'with invalid authentication' in trigger.to_state.attributes.message | lower -%}
                    Неудачная попытка входа в систему с адреса [{{ ipadress }}](https://whatismyipaddress.com/ip/{{- ipadress }})
                {%- else -%}
                    Заблокирован IP адрес [{{ ipadress }}](https://whatismyipaddress.com/ip/{{- ipadress }}), 5 попыток входа
                {%- endif %}, [логи]({{- states('sensor.instance_external_url_config') -}}/config/logs)
            disable_web_page_preview: true
        - service: persistent_notification.dismiss
          data:
            notification_id: >
                {% if 'with invalid authentication' in trigger.to_state.attributes.message | lower %}
                    http_login
                {% else %}
                    ip_ban
                {% endif %}

#Уведомление о неуспешной проверке конфигурации
    - alias: notification check configuration failed
      id: notification check configuration failed
      mode: parallel
      initial_state: true
      trigger:
        - platform: state
          entity_id: 
            - persistent_notification.homeassistant_check_config
            - persistent_notification.invalid_config
          to: 'notifying'
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            disable_web_page_preview: true
            title: "{{ '\U0000203C' }} *Проверка конфигурации*"
            message: >
                {{ trigger.to_state.attributes.message | replace(' and [logs](/config/logs)', ' and [logs](' + states('sensor.instance_external_url_config') + '/config/logs)') }} 

    - alias: notification dismiss check configuration failed
      id: notification dismiss check configuration failed
      mode: parallel
      initial_state: true
      trigger:
        - platform: state
          entity_id: 
            - persistent_notification.homeassistant_check_config
            - persistent_notification.invalid_config
          to: 'notifying'
      action:
        - service: persistent_notification.dismiss
          data:
            notification_id: >
                {% if 'could not be set up' in trigger.to_state.attributes.message | lower %}
                    invalid_config
                {% else %}
                    homeassistant_check_config
                {% endif %}

#Уведомление о перезапуске НА
    - alias: notification start or stop home assistant
      id: notification start or stop home assistant
      mode: parallel
      initial_state: true
      trigger:
        - platform: homeassistant
          id: 'homeassistant_start'
          event: start
        - platform: homeassistant
          event: shutdown
      action:
        - choose:
              conditions:
                - condition: trigger
                  id: homeassistant_start
              sequence:
                - service: homeassistant.update_entity
                  target:
                    entity_id: 
                      - sensor.errors_in_system_log_command_line
                      - sensor.warnings_in_system_log_command_line
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            disable_notification: true
            disable_web_page_preview: true
            title: >
                {%- if trigger.id == 'homeassistant_start' %}
                    {{- '\U00002705' -}}
                {% else %}
                    {{- '\U000026d4' -}}
                {% endif %} *Трекинг устройств*
            message: >
                {% if trigger.id == 'homeassistant_start' -%}
                    Home Assistant запущен за {{ states('sensor.start_time') }}сек. (версия Core: [{{ states('sensor.current_version_ha') }}](https://github.com/home-assistant/core/releases/tag/{{- states('sensor.current_version_ha') }})) {{- '\n' -}}
                    Ошибок: *{{ states('sensor.errors_in_system_log_command_line') }}*, предупреждений: *{{ states('sensor.warnings_in_system_log_command_line') }}*
                {% else -%}
                    Home Assistant *остановлен*
                {% endif -%}

#Уведомление об утечке пароля
    - alias: notifications loss passwords
      id: notifications loss passwords
      mode: parallel
      initial_state: true
      trigger:
        - platform: state
          entity_id: persistent_notification.supervisor_issue_pwned
          to: 'notifying'
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            title: "{{ '\U0000203C' }} *Проверка паролей*"
            message: >
                {{ trigger.to_state.attributes.message }}
        - service: persistent_notification.dismiss
          data:
            notification_id: 'supervisor_issue_pwned'

#Уведомление об ошибках выполнения автоматизаций/скриптов
    - alias: notifications errors in automations or scripts
      id: notifications errors in automations or scripts
      mode: queued
      trigger:
        - platform: event
          event_type: system_log_event
          event_data:
            level: ERROR
      condition:
        - condition: template
          value_template: >-
            {{ 
              trigger.event.data.message | regex_search('Error while executing automation') or
              trigger.event.data.message | regex_search('Error executing script')
            }}
        - condition: template
          value_template: >-
            {{ 
              trigger.event.data.message | length < 4000
            }}
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            parse_mode: 'html'
            disable_web_page_preview: true
            title: "{{ '\U000026d4' }} <b>Ошибка выполнения скрипта</b>"
            message: >
              {{ trigger.event.data.message -}} <a href="{{- states('sensor.instance_external_url_config') -}}/config/logs"> Check logs.</a>

#Уведомление об объектах, которые перешли в статус недоступно
    - alias: notifications objects in unavailable status
      id: notifications objects in unavailable status
      initial_state: false
      mode: queued
      max: 70
      trigger:
        - platform: event
          event_type: state_changed
      condition:
        - condition: state
          entity_id: input_boolean.instances_stoping
          state: 'off'
        - condition: template
          value_template: >-
            {{ trigger.event.data.entity_id in expand('group.important_devices_unavailable') | map(attribute='entity_id') | list }}
        - condition: template
          value_template: >-
            {{ trigger.event.data.new_state.state != trigger.event.data.old_state.state }}
        - condition: template
          value_template: >-
            {{ trigger.event.data.new_state.state in ['unknown', 'unavailable'] }}
      action:
        - choose:
            - conditions: "{{ is_state('input_boolean.instances_stoping', 'off') }}"
              sequence:
                - service: telegram_bot.send_message
                  data:
                    target: !secret telegram_enzokot_chat_id
                    disable_notification: true
                    parse_mode: 'html'
                    title: "{{ '\U000026A0' }} <b>Трекинг устройств</b>"
                    message: >
                      <i>{{ state_attr(trigger.event.data.entity_id, 'friendly_name') }}</i> сменил статус на <b>{{ trigger.event.data.new_state.state }}</b>

#Уведомление о начале/окончании нагрева воды в бойлере
    - alias: notifications on off water heater
      id: notifications on off water heater
      mode: parallel
      initial_state: true
      trigger:
        - platform: state
          entity_id: sensor.0x842e14fffe13a854_power
      condition:
        - condition: state
          entity_id: input_boolean.water_heater_season
          state: 'on'
        - condition: template
          value_template: >
            {% set ignore = ['unknown', 'unavailable', 'none', None, null, ''] %}
            {{ trigger.from_state.state not in ignore and
               trigger.to_state.state not in ignore and
               trigger.to_state.state != trigger.from_state.state
            }}
        - condition: template
          value_template: >
            {{ 
               (trigger.to_state.state | int >= 850 and trigger.from_state.state | int <= 30)
               or
               (trigger.to_state.state | int < 30 and trigger.from_state.state | int > 850)
            }}
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            disable_notification: true
            title: >
                {%- if trigger.to_state.state | int >= 30 %} {{ '\U00002139' }} {%- else -%} {{ '\U00002705' }} {%- endif %} *Водонагреватель*
            message: >
                {%- if trigger.to_state.state | int >= 30 %} *Включен* {%- else -%} *Отключен* {%- endif %} нагрев воды

#Уведомление о неудачном бекапе Google Drive Backup
    - alias: notifications stale google drive backup
      id: notifications stale google drive backup
      mode: single
      max_exceeded: silent
      initial_state: true
      trigger:
        - platform: state
          entity_id: binary_sensor.backups_stale
          from: 'off'
          to: 'on'
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            disable_web_page_preview: true
            title: "{{ '\U000026D4' }} *Резервное копирование БД*"
            message: >
                Проблема с бекапом Google Drive, [логи]({{- states('sensor.instance_external_url_config') -}}/hassio/addon/cebe7a76_hassio_google_drive_backup/logs)

#Уведомление о найденном новом устройстве интеграции
    - alias: notifications entry discovery integration
      id: notifications entry discovery integrations
      mode: queued
      initial_state: true
      trigger:
        - platform: state
          entity_id: persistent_notification.config_entry_discovery
          to: 'notifying'
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            disable_notification: true
            title: "{{ '\U0001F4DF' }} *Устройства*"
            message: >
                Найдено новое устройство в сети, [просмотреть]({{- states('sensor.instance_external_url_config') -}}/config/integrations)
        - service: persistent_notification.dismiss
          data:
            notification_id: 'config_entry_discovery'

#Уведомление о новом устройстве
    - alias: notifications entry discovery
      id: notifications entry discovery
      mode: queued
      max: 100
      max_exceeded: silent
      initial_state: true
      trigger:
        - platform: event
          event_type: entity_registry_updated
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            disable_notification: true
            parse_mode: 'html'
            title: "{{ '\U0001F4DF' }} <b>Устройства</b>"
            message: "<b>{{ trigger.event.data.action | capitalize }}</b>: {{ trigger.event.data.old_entity_id + '->' if trigger.event.data.old_entity_id is defined }}{{ trigger.event.data.entity_id if trigger.event.data.entity_id is defined else 'NA' }}"

#Уведомление о повторном запуске автоматизации
    - alias: notifications automation already running
      id: notifications automation already running
      initial_state: true
      mode: queued
      trigger:
        - platform: event
          event_type: system_log_event
          event_data:
            level: WARNING
      condition:
        - condition: template
          value_template: '{{ "Already running" in trigger.event.data.message[0] }}'
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            disable_notification: true
            parse_mode: 'html'
            title: "{{ '\U000026A0' }} <b>Выполнение автоматизаций</b>"
            message: "Повторный запуск автоматизации: {{trigger.event.data.message[0]}}"

#Уведомление о критических ошибках в системном журнале
    - alias: system log critical error notify
      id: system log critical error notify
      initial_state: true
      mode: queued
      trigger:
        - platform: event
          event_type: system_log_event
          event_data:
            level: FATAL
        - platform: event
          event_type: system_log_event
          event_data:
            level: CRITICAL
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            parse_mode: 'html'
            disable_web_page_preview: true
            title: "{{ '\U000026d4' }} <b>Ошибки системного журнала</b>"
            message: >
              {{ trigger.event.data.message -}} <a href="{{- states('sensor.instance_external_url_config') -}}/config/logs"> Check logs.</a>

#Уведомление о непрочитанных/заполнении памяти sms на модеме
    - alias: notifications sms unread or full storage
      id: notifications sms unread or full storage
      initial_state: true
      mode: single
      max_exceeded: silent
      trigger:
        - platform: state
          entity_id: sensor.huawei_e3372h_320_sms_unread
        - platform: state
          id: 'full_storage'
          entity_id: binary_sensor.huawei_e3372h_320_sms_storage_full
          from: 'off'
          to: 'on'
      condition:
        - condition: template
          value_template: >
            {% set ignore = ['unknown', 'unavailable', 'none', None, null, ''] %}
            {{ trigger.id == 'full_storage' or
               trigger.to_state.state not in ignore and
               trigger.to_state.state | int > trigger.from_state.state | int
            }}
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            disable_notification: true
            title: >
                {% if trigger.id == 'full_storage' -%} {{ '\U0001F4EE' }} {%- else -%} {{ '\U00002709' }} {%- endif %} *SMS через модем*
            message: >
                Обнаружено {% if trigger.id == 'full_storage' -%} заполнение памяти {%- else -%} *{{ trigger.to_state.state }}* {{ trigger.to_state.state | int | format(morph='непрочитанное', as_text=false) | replace(trigger.to_state.state + ' ', '') }} {%- endif %} sms на {{ device_attr(trigger.entity_id, 'name') }}

#Уведомление об отсутствии link на Keenetic
    - alias: notifications link down keenetic
      id: notifications link down keenetic
      initial_state: true
      mode: single
      max_exceeded: silent
      trigger:
        - platform: state
          entity_id: binary_sensor.check_keenetic_link_down
          from: 'on'
          to: 'off'
        - platform: state
          entity_id: binary_sensor.check_keenetic_link_down
          from: 'off'
          to: 'on'
        - platform: homeassistant
          event: start
        - platform: event
          event_type: event_template_reloaded
      condition:
        - condition: numeric_state
          entity_id: counter.counter_keenetic_link_down
          above: 0
      action:
        - service: notify.huawei_lte
          data:
            message: >-
                     {{ '\U0000203C' }} {{ states('sensor.check_keenetic_link_down') }} Keenetic link is down
            target: !secret sms_phone_enzokot
            data:
              url: 'http://192.168.8.1/'
        - service: counter.reset
          entity_id: counter.counter_keenetic_link_down

#Уведомление о новых записях в RSS ленте
    - alias: notifications new rss posts
      id: notifications new rss posts
      mode: queued
      trigger:
        - platform: event
          event_type: feedreader
      condition:
        - "{{ trigger.event.data.feed_url != 'https://home-assistant.io/atom.xml' or as_timestamp(now()) - as_timestamp(states('sensor.online')) | int > 60 }}"
      action:
        - variables:
            all_chat_id: !secret telegram_all_chat_id
            enzokot_chat_id: !secret telegram_enzokot_chat_id
            stormy_notification: "{{ trigger.event.data.feed_url is search('shtormovye-i-ekstrennye-preduprezhdeniya', ignorecase=True) }}"
        - service: telegram_bot.send_message
          data:
            target: >
                {% if stormy_notification %}
                    {{ all_chat_id }}
                {% else %}
                    {{ enzokot_chat_id }}
                {% endif %}
            disable_notification: "{{ not stormy_notification }}"
            disable_web_page_preview: true
            parse_mode: 'html'
            title: "{{ '\U0001F4F0' }} <b>RSS новости</b>"
            message: >
                <a href="{{- trigger.event.data.link -}}">{{- trigger.event.data.title -}}</a>

#Уведомление о наличии warning и error в syslog HA
    - alias: notifications warnings or errors in syslog
      id: notifications warnings or errors in syslog
      initial_state: true
      mode: single
      max_exceeded: silent
      trigger:
        - platform: time_pattern
          hours: "/1"
          minutes: 30
      condition:
        - "{{ states('counter.system_log_error_counter') | int > 0 or states('counter.system_log_warning_counter') | int > 0 }}"
        - condition: time
          after: '8:30:00'
          before: '23:00:00'
      action:
        - service: telegram_bot.send_message
          data:
            target: !secret telegram_enzokot_chat_id
            disable_notification: true
            title: "{{ '\U0001F4D6' }} *Данные системного журнала*"
            message: |-
                {% if states('counter.system_log_error_counter') | int > 0 -%}
                    Ошибок в логе: *{{ states('counter.system_log_error_counter') }}*
                {% endif -%}
                {% if states('counter.system_log_warning_counter') | int > 0 -%}
                    Предупреждений в логе: *{{ states('counter.system_log_warning_counter') }}*
                {% endif -%}
                [Просмотр логов]({{- states('sensor.instance_external_url_config') -}}/config/logs)

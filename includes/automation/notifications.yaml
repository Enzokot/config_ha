
#Датчик открытия входной двери
    - alias: notification front door open long time
      id: notification front door open long time
      initial_state: true
      triggers:
        trigger: state
        entity_id: binary_sensor.0x158d000359304c_contact
        from: 'off'
        to: 'on'
        for:
          minutes: 2
      actions:
        - parallel:
            - action: notify.send_message
              target:
                entity_id: notify.telegram_enzokot_to_bot
              data:
                title: >-
                       ⚠️ *Датчик открытия/закрытия*
                message: >-
                         Входная дверь: открыта более 2 минут
                # data:
                #     inline_keyboard:
                #       - 'Открыть:/open, Отклонить:/reject'
                #       - '-'
            - choose:
                - conditions:
                    - condition: state
                      entity_id: media_player.lg_smart_tv
                      state: 'on'
                  sequence:
                    - action: notify.kotletochka_tv
                      data:
                        message: 'Входная дверь: открыта более 2 минут'

    - alias: notification lobby door open long time
      id: notification lobby door open long time
      initial_state: true
      triggers:
        - trigger: state
          id: 'door_open'
          entity_id: binary_sensor.lobby_door_open_long_time
          from: 'off'
          to: 'on'
        - trigger: state
          id: 'door_close'
          entity_id: binary_sensor.lobby_door_open_long_time
          from: 'on'
          to: 'off'
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_all_chat_id
            disable_notification: true
            title: >-
                   {% if trigger.id == 'door_open' -%} {{ '\U0001F513' }} {%- else -%} {{ '\U0001f510' }} {%- endif %} *Датчик открытия/закрытия*
            message: >-
                     Тамбурная дверь: {% if trigger.id == 'door_open' -%} открыта более 5 минут {%- else -%} закрыта {% endif -%}

    - alias: notification sound front door open long time
      id: notification sound front door open long time
      initial_state: true
      triggers:
        - trigger: state
          entity_id: binary_sensor.0x158d000359304c_contact
          from: 'off'
          to: 'on'
          for:
            minutes: 2
      conditions:
          - condition: state
            entity_id: input_boolean.alarm_gateway_button
            state: 'off'
          - condition: state
            entity_id: alarm_control_panel.signalka_shliuza_alarm
            state: 'disarmed'
          - condition: or
            conditions:
              - condition: time
                after: '9:00:00'
                before: '13:30:00'
              - condition: time
                after: '16:30:00'
                before: '21:00:00'
      actions:
          - action: timer.start
            entity_id: timer.front_door_ringtone
          - parallel:
              - action: script.turn_on
                data:
                  entity_id: script.alice_custom_tts_volume
                  variables:
                    entity: 'media_player.yandex_station_ff98f029b620413b35e5e278'
                    text: 'Внимание! Входная дверь открыта!!!'
                    vol_level: '0.65'
              - action: xiaomi_aqara.play_ringtone
                data:
                  gw_mac: !secret gateway1_mac
                  ringtone_id: 10004
                  ringtone_vol: 15

    - alias: notification sound front door open long time repeat
      id: notification sound front door open long time repeat
      initial_state: true
      triggers:
           - trigger: event
             event_type: timer.finished
             event_data:
               entity_id: timer.front_door_ringtone
      conditions:
          - condition: state
            entity_id: binary_sensor.0x158d000359304c_contact
            state: 'on'
      actions:
          - action: timer.start
            entity_id: timer.front_door_ringtone
          - parallel:
              - action: script.alice_custom_tts_volume
                data:
                  entity: 'media_player.yandex_station_ff98f029b620413b35e5e278'
                  text: 'Внимание! Входная дверь открыта!!!'
                  vol_level: '0.65'
              - action: xiaomi_aqara.play_ringtone
                data:
                  gw_mac: !secret gateway1_mac
                  ringtone_id: 10004
                  ringtone_vol: 15

    - alias: notification sound front door open long time cancel
      id: notification sound front door open long time cancel
      initial_state: true
      triggers:
           - trigger: time
             at: "13:30:00"
           - trigger: time
             at: "21:00:00"
           - trigger: state
             id: "binary_sensor_trigger"
             entity_id: binary_sensor.0x158d000359304c_contact
             from: 'on'
             to: 'off'
      conditions:
            condition: state
            entity_id: timer.front_door_ringtone
            state: 'active'
      actions:
          - action: timer.cancel
            entity_id: timer.front_door_ringtone
          - choose:
              - conditions: "{{ trigger.id == 'binary_sensor_trigger' }}"
                sequence:
                  - action: xiaomi_aqara.stop_ringtone
                    data:
                      gw_mac: !secret gateway1_mac

    - alias: notification front door open close
      id: notification front door open close
      mode: queued
      initial_state: true
      triggers:
        - trigger: state
          entity_id: binary_sensor.0x158d000359304c_contact
          from: 
            - 'off'
            - 'on'
          to: 
            - 'on'
            - 'off'
      actions:
        - variables:
            text_for_message: "{{ iif(trigger.to_state.state == 'on', 'открыта', 'закрыта') }}"
        - parallel:
            - action: telegram_bot.send_message
              data:
                  config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                  title: "{{ iif(trigger.to_state.state == 'on', '\U0001F6AA', '\U0001f510') }} *Датчик открытия/закрытия*"
                  message: "Входная дверь: {{ text_for_message }}"
                  disable_notification: true
                  target: !secret telegram_enzokot_chat_id
            - choose:
                - conditions:
                    - condition: state
                      entity_id: media_player.lg_smart_tv
                      state: 'on'
                  sequence:
                    - action: notify.kotletochka_tv
                      data:
                        message: "Входная дверь: {{ text_for_message }}"

    - alias: notification front door open armed
      id: notification front door open armed
      initial_state: true
      triggers:
        - trigger: state
          entity_id: binary_sensor.0x158d000359304c_contact
          to: 'on'
      conditions:
        - condition: state
          entity_id: alarm_control_panel.signalka_shliuza_alarm
          state: 'armed_away'
      actions:
        - variables:
            sm_g973f_rezhim_ne_bespokoit: "{{ states('sensor.sm_g973f_do_not_disturb_sensor') }}"
        - choose:
            - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
              sequence:
                - action: notify.mobile_app_sm_g973f
                  data:
                    message: 'command_dnd'
                    data:
                      command: 'off'
                - wait_for_trigger:
                    - trigger: state
                      entity_id: sensor.sm_g973f_do_not_disturb_sensor
                  timeout:
                    seconds: 5
        - variables:
            sm_g973f_rezhim_zvonka: "{{ states('sensor.sm_g973f_ringer_mode') }}"
        - choose:
            - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
              sequence:
                - action: notify.notify
                  data:
                    message: 'command_ringer_mode'
                    data:
                      command: 'normal'
        - parallel:
            - action: telegram_bot.send_message
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                title: >-
                       {{ '\U0001f6a8' }} *Сигнализация*
                message: >-
                         Обнаружено вскрытие {{ trigger.to_state.attributes.friendly_name }} при включенной сигнализации
                target: !secret telegram_all_chat_id
                inline_keyboard:
                  - 'Выключить сирену:/stop_alarm'
            - action: notify.notify
              data:
                title: "{{ '\U0001f6a8' }} Сигнализация"
                message: >-
                         Обнаружено вскрытие {{ trigger.to_state.attributes.friendly_name }} при включенной сигнализации
                data:
                  ttl: 0
                  priority: high
                  channel: alarm_stream
                  actions:
                    - action: "stop_alarm"
                      title: "Выключить сирену"
            - action: notify.huawei_lte
              data:
                message: >-
                         🚨 Обнаружено вскрытие {{ trigger.to_state.attributes.friendly_name }} при включенной сигнализации
                target: !secret sms_phone_all
                data:
                  url: 'http://192.168.8.1/'
        - choose:
            - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
              sequence:
                - action: notify.mobile_app_sm_g973f
                  data:
                    message: 'command_ringer_mode'
                    data:
                      command: "{{ sm_g973f_rezhim_zvonka }}"
        - choose:
            - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
              sequence:
                - action: notify.mobile_app_sm_g973f
                  data:
                    message: 'command_dnd'
                    data:
                      command: "{{ sm_g973f_rezhim_ne_bespokoit }}"

    - alias: notification motion detected armed
      id: notification motion detected armed
      initial_state: true
      mode: queued
      triggers:
        - trigger: state
          entity_id: 
             - binary_sensor.0x158d00054b8d72_motion
             - binary_sensor.0x158d000566bde7_motion
             - binary_sensor.0x158d0003953ee9_motion
          to: 'on'
      conditions:
        - condition: state
          entity_id: alarm_control_panel.signalka_shliuza_alarm
          state: 'armed_away'
      actions:
        - variables:
            sm_g973f_rezhim_ne_bespokoit: "{{ states('sensor.sm_g973f_do_not_disturb_sensor') }}"
        - choose:
            - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
              sequence:
                - action: notify.mobile_app_sm_g973f
                  data:
                    message: 'command_dnd'
                    data:
                      command: 'off'
                - wait_for_trigger:
                    - trigger: state
                      entity_id: sensor.sm_g973f_do_not_disturb_sensor
                  timeout:
                    seconds: 5
        - variables:
            sm_g973f_rezhim_zvonka: "{{ states('sensor.sm_g973f_ringer_mode') }}"
        - choose:
            - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
              sequence:
                - action: notify.notify
                  data:
                    message: 'command_ringer_mode'
                    data:
                      command: 'normal'
        - parallel:
            - action: telegram_bot.send_message
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                title: >-
                       {{ '\U0001f6a8' }} *Сигнализация*
                message: >-
                         Обнаружено движение _{{ trigger.to_state.attributes.friendly_name }}_ при включенной сигнализации
                target: !secret telegram_all_chat_id
                inline_keyboard:
                  - 'Выключить сирену:/stop_alarm'
            - action: notify.notify
              data:
                title: "{{ '\U0001f6a8' }} Сигнализация"
                message: >-
                         Обнаружено движение {{ trigger.to_state.attributes.friendly_name }} при включенной сигнализации
                data:
                  ttl: 0
                  priority: high
                  channel: alarm_stream
                  actions:
                    - action: "stop_alarm"
                      title: "Выключить сирену"
            - action: notify.huawei_lte
              data:
                message: >-
                         🚨 Обнаружено движение {{ trigger.to_state.attributes.friendly_name }} при включенной сигнализации
                target: !secret sms_phone_all
                data:
                  url: 'http://192.168.8.1/'
        - choose:
            - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
              sequence:
                - action: notify.mobile_app_sm_g973f
                  data:
                    message: 'command_ringer_mode'
                    data:
                      command: "{{ sm_g973f_rezhim_zvonka }}"
        - choose:
            - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
              sequence:
                - action: notify.mobile_app_sm_g973f
                  data:
                    message: 'command_dnd'
                    data:
                      command: "{{ sm_g973f_rezhim_ne_bespokoit }}"

    - alias: notification open window armed
      id: notification open window armed
      initial_state: true
      mode: queued
      triggers:
        - trigger: state
          entity_id: 
             - binary_sensor.window_bed_room_group
             - binary_sensor.window_childrens_room_group
             - binary_sensor.window_living_room_group
             - binary_sensor.window_kitchen_group
          to: 'on'
      conditions:
        - condition: state
          entity_id: alarm_control_panel.signalka_shliuza_alarm
          state: 'armed_away'
      actions:
        - variables:
            sm_g973f_rezhim_ne_bespokoit: "{{ states('sensor.sm_g973f_do_not_disturb_sensor') }}"
        - choose:
            - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
              sequence:
                - action: notify.mobile_app_sm_g973f
                  data:
                    message: 'command_dnd'
                    data:
                      command: 'off'
                - wait_for_trigger:
                    - trigger: state
                      entity_id: sensor.sm_g973f_do_not_disturb_sensor
                  timeout:
                    seconds: 5
        - variables:
            sm_g973f_rezhim_zvonka: "{{ states('sensor.sm_g973f_ringer_mode') }}"
        - choose:
            - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
              sequence:
                - action: notify.notify
                  data:
                    message: 'command_ringer_mode'
                    data:
                      command: 'normal'
        - parallel:
            - action: telegram_bot.send_message
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                title: >-
                       {{ '\U0001f6a8' }} *Сигнализация*
                message: >-
                         Обнаружено вскрытие окна _{{ trigger.to_state.attributes.friendly_name }}_ при включенной сигнализации
                inline_keyboard:
                  - 'Выключить сирену:/stop_alarm'
                target: !secret telegram_all_chat_id
            - action: notify.notify
              data:
                title: "{{ '\U0001f6a8' }} Сигнализация"
                message: >-
                         Обнаружено вскрытие окна {{ trigger.to_state.attributes.friendly_name }} при включенной сигнализации
                data:
                  ttl: 0
                  priority: high
                  channel: alarm_stream
                  actions:
                    - action: "stop_alarm"
                      title: "Выключить сирену"
            - action: notify.huawei_lte
              data:
                message: >-
                         🚨 Обнаружено вскрытие окна {{ trigger.to_state.attributes.friendly_name }} при включенной сигнализации
                target: !secret sms_phone_all
                data:
                  url: 'http://192.168.8.1/'
        - choose:
            - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
              sequence:
                - action: notify.mobile_app_sm_g973f
                  data:
                    message: 'command_ringer_mode'
                    data:
                      command: "{{ sm_g973f_rezhim_zvonka }}"
        - choose:
            - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
              sequence:
                - action: notify.mobile_app_sm_g973f
                  data:
                    message: 'command_dnd'
                    data:
                      command: "{{ sm_g973f_rezhim_ne_bespokoit }}"

    - alias: notification gateway alarm triggered normal mode
      id: notification gateway alarm triggered normal mode
      mode: queued
      initial_state: true
      triggers:
        - trigger: state
          entity_id: 
             - alarm_control_panel.54ef44315770_alarm
             - alarm_control_panel.54ef44cb80fd_alarm
             - alarm_control_panel.54ef443127b2_alarm
          to: 'triggered'
      conditions:
        - condition: state
          entity_id: input_boolean.alarm_gateway_button
          state: 'off'
        - condition: state
          entity_id: alarm_control_panel.signalka_shliuza_alarm
          state: 'disarmed'
      actions:
        - variables:
            sm_g973f_rezhim_ne_bespokoit: "{{ states('sensor.sm_g973f_do_not_disturb_sensor') }}"
        - choose:
            - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
              sequence:
                - action: notify.mobile_app_sm_g973f
                  data:
                    message: 'command_dnd'
                    data:
                      command: 'off'
                - wait_for_trigger:
                    - trigger: state
                      entity_id: sensor.sm_g973f_do_not_disturb_sensor
                  timeout:
                    seconds: 5
        - variables:
            sm_g973f_rezhim_zvonka: "{{ states('sensor.sm_g973f_ringer_mode') }}"
        - choose:
            - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
              sequence:
                - action: notify.notify
                  data:
                    message: 'command_ringer_mode'
                    data:
                      command: 'normal'
        - parallel:
            - action: telegram_bot.send_message
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                title: >-
                       {{ '\U0001f6a8' }} *Сигнализация*
                message: >-
                         Обнаружено срабатывание шлюза _{{ trigger.to_state.attributes.friendly_name }}_
                inline_keyboard:
                  - 'Выключить сирену:/stop_alarm'
                target: !secret telegram_all_chat_id
            - action: notify.notify
              data:
                title: "{{ '\U0001f6a8' }} Сигнализация"
                message: >-
                         Обнаружено срабатывание шлюза {{ trigger.to_state.attributes.friendly_name }}
                data:
                  ttl: 0
                  priority: high
                  channel: alarm_stream
                  actions:
                    - action: "stop_alarm"
                      title: "Выключить сирену"
            - action: notify.huawei_lte
              data:
                message: >-
                         🚨 Обнаружено срабатывание шлюза {{ trigger.to_state.attributes.friendly_name }}
                target: !secret sms_phone_all
                data:
                  url: 'http://192.168.8.1/'
        - choose:
            - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
              sequence:
                - action: notify.mobile_app_sm_g973f
                  data:
                    message: 'command_ringer_mode'
                    data:
                      command: "{{ sm_g973f_rezhim_zvonka }}"
        - choose:
            - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
              sequence:
                - action: notify.mobile_app_sm_g973f
                  data:
                    message: 'command_dnd'
                    data:
                      command: "{{ sm_g973f_rezhim_ne_bespokoit }}"

#Пылесос
    - alias: vacuum cleaner error to all
      id: vacuum cleaner error to all
      initial_state: true
      triggers:
       - trigger: state
         entity_id: vacuum.xiaomi_vacuum_cleaner
         attribute: status
         to: 
           - 'Error'
           - 'In Error'
           - 'Charging Error'
      actions:
        - parallel:
            - action: telegram_bot.send_photo
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                target: !secret telegram_all_chat_id
                url: "{{- 'http://homeassistant.local.hass.io:8123' + state_attr('camera.roborock_vacuum_map', 'entity_picture') -}}"
                caption: >-
                       ⚠️ *Степа* {{- '\n' -}} Похоже я застрял или какая то другая ошибка
                inline_keyboard:
                  - 'Найти меня (громко):/findvacuum'
            - choose:
                - conditions:
                    - condition: state
                      entity_id: media_player.lg_smart_tv
                      state: 'on'
                  sequence:
                    - action: notify.kotletochka_tv
                      data:
                        message: 'Степа: мне нужна помощь'

    - alias: vacuum cleaner after cleaning chita
      id: vacuum cleaner after cleaning chita
      initial_state: true
      triggers:
       - trigger: state
         entity_id: vacuum.xiaomi_vacuum_cleaner
         from: 'returning'
         to: 'docked'
      conditions:
          condition: template
          value_template: "{{ (states('sensor.xiaomi_vacuum_cleaner_total_clean_area') | int(0) ) > (states('input_number.total_cleaned_area_saved') | int(0) ) + 30 }}"
      actions:
        - variables:
            current_clean_area: >-
                {{ states('sensor.xiaomi_vacuum_cleaner_current_clean_area') | round(0, 'ceil', 0) | string + state_attr('sensor.xiaomi_vacuum_cleaner_current_clean_area', 'unit_of_measurement') }}
            current_clean_duration: >-
               {% set uptime = states('sensor.xiaomi_vacuum_cleaner_current_clean_duration') | int(0) %}
               {% set minutes = (( uptime % 3600) / 60) | int(0) %}
               {% set hours = ((uptime % 86400) / 3600) | int(0) %}
               {% set days = (uptime / 86400) | int(0) %}
                 {% if uptime < 1 %}
                   Меньше минуты
                 {%- else %}
                   {% if days > 0 %}
                     {{ days -}} д.
                   {%- endif %}
                   {%- if hours > 0 %}
                     {%- if days > 0 %}
                       {{- ' ' -}}
                     {% endif -%}
                     {{ hours -}} ч.
                   {%- endif %}
                   {%- if minutes > 0 %}
                     {%- if days > 0 or hours > 0 %}
                       {{- ' ' -}}
                     {% endif -%}
                       {{ minutes -}} м.
                   {%- endif -%}
                 {% endif %}
        - parallel:
            - action: telegram_bot.send_photo
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                target: !secret telegram_chita_chat_id
                url: "{{- 'http://homeassistant.local.hass.io:8123' + state_attr('camera.roborock_vacuum_map', 'entity_picture') -}}"
                caption: >-
                       {{ '\U0001f4af' }} *Степа* {{- '\n' -}} Вернулся на базу (длительность: {{- current_clean_duration -}}, площадь: {{- current_clean_area -}}), нужно снять бак с водой и заглянуть в контейнер пылесборника
            - action: input_number.set_value
              data:
                entity_id: input_number.total_cleaned_area_saved
                value: >-
                       {{ (states('sensor.xiaomi_vacuum_cleaner_total_clean_area') | int(0) ) }}
            - choose:
                - conditions:
                    - condition: state
                      entity_id: media_player.lg_smart_tv
                      state: 'on'
                  sequence:
                    - action: notify.kotletochka_tv
                      data:
                        message: 'Степа: вернулся на базу'

#Датчики дыма
    - alias: smoke detector alarm
      id: smoke detector alarm
      initial_state: true
      triggers:
       - trigger: state
         entity_id: 
           - binary_sensor.0x158d0003943639_smoke
           - binary_sensor.0x158d00039a8358_smoke
           - binary_sensor.0x158d00039d9398_smoke
           - binary_sensor.0x158d00045ca483_smoke
           - binary_sensor.0x00158d00045cd551_smoke
           - binary_sensor.0x54ef44100080c88d_smoke
         to: 'on'
      actions:
        - variables:
            sm_g973f_rezhim_ne_bespokoit: "{{ states('sensor.sm_g973f_do_not_disturb_sensor') }}"
        - choose:
            - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
              sequence:
                - action: notify.mobile_app_sm_g973f
                  data:
                    message: 'command_dnd'
                    data:
                      command: 'off'
                - wait_for_trigger:
                    - trigger: state
                      entity_id: sensor.sm_g973f_do_not_disturb_sensor
                  timeout:
                    seconds: 5
        - variables:
            sm_g973f_rezhim_zvonka: "{{ states('sensor.sm_g973f_ringer_mode') }}"
            areas_list: "{{ states.binary_sensor | selectattr('entity_id', 'match', '.*_smoke') | selectattr('state', 'eq', 'on') | map(attribute='entity_id') | map('area_name') | reject('none') | unique | join('\n') }}"
        - choose:
            - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
              sequence:
                - action: notify.notify
                  data:
                    message: 'command_ringer_mode'
                    data:
                      command: 'normal'
        - parallel:
            - action: telegram_bot.send_message
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                target: !secret telegram_all_chat_id
                title: >-
                         {{ '\U0001F525' }} *Датчик дыма*
                message: |-
                            Сработали датчики:
                            {{- '\n' -}}
                            _{{- areas_list -}}_
                inline_keyboard:
                  - 'Выключить сирену:/stop_alarm'
            - action: notify.notify
              data:
                data:
                  ttl: 0
                  priority: high
                  channel: alarm_stream
                  actions:
                    - action: "stop_alarm"
                      title: "Выключить сирену"
                title: "{{ '\U0001F525' }} Датчик дыма"
                message: |-
                            Сработали датчики:
                            {{- '\n' -}}
                            {{- areas_list -}}
            - action: notify.huawei_lte
              data:
                message: |-
                            {{ '\U0001F525' }} Сработали датчики дыма:
                            {{- '\n' -}}
                            {{- areas_list -}}
                target: !secret sms_phone_all
                data:
                  url: 'http://192.168.8.1/'
        - choose:
            - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
              sequence:
                - action: notify.mobile_app_sm_g973f
                  data:
                    message: 'command_ringer_mode'
                    data:
                      command: "{{ sm_g973f_rezhim_zvonka }}"
        - choose:
            - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
              sequence:
                - action: notify.mobile_app_sm_g973f
                  data:
                    message: 'command_dnd'
                    data:
                      command: "{{ sm_g973f_rezhim_ne_bespokoit }}"

#Срок сертификата SSL менее 5 дней
    - alias: notification cert expired
      id: notification cert expired
      initial_state: true
      triggers:
        - trigger: state
          entity_id: binary_sensor.cert_expired_keenetic_domain
          from: 'off'
          to: 'on'
        - trigger: state
          entity_id: binary_sensor.cert_expired_asuscomm_domain_klg
          from: 'off'
          to: 'on'
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            title: >-
                     ⚠️ *Сертификат SSL*
            message: >-
                        {%- set entity_name = trigger.entity_id | replace('binary_', '') | replace('_expired_', '_expiry_') -%}
                        Срок действия сертификата для _{{ trigger.to_state.name -}}_: *{{- states(entity_name) -}}* {{ state_attr(entity_name, 'unit_of_measurement') }}

#Уведомление о новых версиях в домене update
    - alias: update available or installed notification
      #id: update available or installed notification
      initial_state: true
      mode: queued
      trigger_variables:
        not_has_state: "{{ ['unknown', 'unavailable', 'none', None, null, ''] }}"
      triggers:
        - trigger: event
          event_type: state_changed
      conditions:
        - "{{ trigger.event.data.entity_id.startswith('update.') }}"
        - "{{ trigger.event.data.old_state is not none and trigger.event.data.new_state is not none }}"
        - "{{ trigger.event.data.new_state.attributes.latest_version is defined and trigger.event.data.new_state.attributes.installed_version is defined }}"
        - "{{ trigger.event.data.old_state.attributes.latest_version is defined and trigger.event.data.old_state.attributes.installed_version is defined }}"
        - or:
            - condition: template
              value_template: >
                {{ 
                  trigger.event.data.new_state.state == 'on' and
                  ((is_state_attr(trigger.event.data.entity_id, 'device_class', 'firmware')
                  and version(trigger.event.data.new_state.attributes.latest_version) != version(trigger.event.data.old_state.attributes.latest_version))
                  or version(trigger.event.data.new_state.attributes.latest_version) > version(trigger.event.data.old_state.attributes.latest_version)) and
                  trigger.event.data.new_state.attributes.latest_version not in not_has_state and
                  trigger.event.data.new_state.attributes.latest_version is not none
                }}
            - condition: template
              value_template: >
                {{ 
                  trigger.event.data.old_state.state == 'on' and trigger.event.data.new_state.state == 'off' and
                  ((is_state_attr(trigger.event.data.entity_id, 'device_class', 'firmware')
                  and version(trigger.event.data.new_state.attributes.installed_version) != version(trigger.event.data.old_state.attributes.installed_version))
                  or version(trigger.event.data.new_state.attributes.installed_version) > version(trigger.event.data.old_state.attributes.installed_version)) and
                  trigger.event.data.new_state.attributes.installed_version not in not_has_state and
                  trigger.event.data.new_state.attributes.installed_version is not none
                }}
      actions:
        - variables:
            release_url: >- 
                {% if trigger.event.data.entity_id == 'update.home_assistant_core_update' -%}
                  {%- if state_attr(trigger.event.data.entity_id, 'latest_version').split('.')[2] | int(0) == 0 -%}
                    {{- state_attr(trigger.event.data.entity_id, 'release_url') -}}
                  {%- else -%}
                    https://github.com/home-assistant/core/releases/tag/{{- trigger.event.data.new_state.attributes.latest_version -}}
                  {%- endif -%}
                {%- elif state_attr(trigger.event.data.entity_id, 'release_url') is not none -%}
                  {{- state_attr(trigger.event.data.entity_id, 'release_url') -}}
                {%- elif device_attr(trigger.event.data.entity_id, 'configuration_url') is match('homeassistant://', ignorecase=True) -%}
                  {{- device_attr(trigger.event.data.entity_id, 'configuration_url') | replace('homeassistant:/', states('sensor.instance_external_url_config')) -}}
                {%- else -%}
                  {{- states('sensor.instance_external_url_config') -}}/config/dashboard
                {%- endif %}
            latest_version: "{{ trigger.event.data.new_state.attributes.latest_version }}"
            installed_version: "{{ state_attr(trigger.event.data.entity_id, 'installed_version') }}"
            friendlyname: "{{- trigger.event.data.new_state.name | replace(' Update', '') -}}"
        - choose:
            - conditions: >
                {{ trigger.event.data.new_state.attributes.installed_version != trigger.event.data.old_state.attributes.installed_version }}
              sequence:
                - variables:
                    old_installed_version: "{{ trigger.event.data.old_state.attributes.installed_version }}"
                - action: telegram_bot.send_message
                  data:
                    config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                    target: !secret telegram_enzokot_chat_id
                    title: "{{ '\U0001F38A' }} *Системное обновление*"
                    message: >
                        Обновлен {{ friendlyname }} с {{ old_installed_version }} на [{{ latest_version }}]({{- release_url }}) версию.
                    disable_web_page_preview: true
          default:
            - parallel:
                - action: telegram_bot.send_message
                  data:
                    config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                    target: !secret telegram_enzokot_chat_id
                    title: "{{ '\U0001F389' }} *Системное обновление*"
                    message: >
                        Доступна [{{ latest_version }}]({{- release_url }}) версия {{ friendlyname }} для установки, текущая *{{ installed_version }}*.
                    disable_web_page_preview: true
                    inline_keyboard: >-
                      {{ iif(state_attr(trigger.event.data.entity_id, 'supported_features') | int(0) > 0, ['Установить:/installupdate ' + device_id(trigger.event.data.entity_id)], []) }}
                - sequence:
                  - condition: "{{ not is_state_attr(trigger.event.data.entity_id, 'device_class', 'firmware') }}"
                  - action: notify.html5
                    data:
                      title: "{{ '\U0001f389' }} *Системное обновление*"
                      message: "Доступна {{ latest_version }} версия {{ friendlyname }} для установки, текущая {{ installed_version }}"
                      target: n550jk
                      data:
                        url: "{{- release_url }}"
                        actions: >-
                          {{ iif(state_attr(trigger.event.data.entity_id, 'supported_features') | int(0) > 0, [{'action':'install_update', 'title':'Обновить'}], []) }}
                        tag: >
                          update_available_notify_ {{- trigger.event.data.entity_id | replace('update.', '') }}

#Низкий заряд батарей
    - alias: notification low battery zigbee
      id: notification low battery zigbee
      initial_state: true
      triggers:
        - trigger: time
          at: "20:00:00"
      conditions: >
                    {%- set entities = expand('group.dynamic_group_sensor_battery') -%}
                    {%- set datanames = namespace(entity_name=[]) -%}
                    {% for x in entities -%}
                      {% set entity_this_z2m = states.sensor[x.entity_id | replace('sensor.', '') | replace('_battery', '_last_seen')] is not none -%}
                      {% set entity_this_gw3 = states.sensor[x.entity_id | replace('sensor.', '') | replace('_battery', '_zigbee')] is not none -%}
                      {% if (not x.entity_id.endswith("_low_battery") and x.state | int(101) <= iif(entity_this_z2m or entity_this_gw3, 55, 20)) or (x.entity_id.endswith("_low_battery") and x.state | string == 'on') -%}
                        {% set datanames.entity_name = datanames.entity_name + ['_' + x.name + '_'] -%}
                      {% endif %}
                    {%- endfor %}
                    {{ datanames.entity_name | list | count > 0 }}
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            title: >-
                     {{ '\U0001f50b' -}} *Низкий заряд*
            message: >-
                        Для устройств:
                        {{- '\n' -}}
                        {%- set entities = expand('group.dynamic_group_sensor_battery') -%}
                        {%- set datanames = namespace(entity_name=[]) -%}
                        {% for x in entities -%}
                          {% set entity_this_z2m = states.sensor[x.entity_id | replace('sensor.', '') | replace('_battery', '_last_seen')] is not none -%}
                          {% set entity_this_gw3 = states.sensor[x.entity_id | replace('sensor.', '') | replace('_battery', '_zigbee')] is not none -%}
                          {% if (not x.entity_id.endswith("_low_battery") and x.state | int(101) <= iif(entity_this_z2m or entity_this_gw3, 55, 20)) -%}
                            {% set datanames.entity_name = datanames.entity_name + ['_' + x.name + '_' + ': *' + x.state + '*%'] -%}
                          {% endif -%}
                          {% if (x.entity_id.endswith("_low_battery") and x.state | string == 'on') -%}
                            {% set datanames.entity_name = datanames.entity_name + ['_' + x.name + '_'] -%}
                          {% endif %}
                        {%- endfor %}
                        {{- datanames.entity_name | list | join(', \n') }}

#После рестарта НА остался включенный обогреватель
    - alias: notification safety sockets on restart
      id: notification safety sockets on restart
      initial_state: true
      triggers:
        - trigger: homeassistant
          event: start
      conditions:
        - condition: state
          entity_id: switch.0x842e14fffe5047f5
          state: 'on'
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            title: >-
                     {{ '\U0001f50c' }} *Управляемые розетки*
            message: >-
                        После перезапуска НА осталась включена розетка обогревателя.

#Уведомление от розеток при превышении 3кВт
    - alias: notification safety sockets off
      id: notification safety sockets off
      initial_state: true
      triggers:
          - trigger: numeric_state
            entity_id: 
                - sensor.0x842e14fffe5047f5_power
                - sensor.0x842e14fffe13a854_power
                - sensor.0x588e81fffeff5c4f_power
                - sensor.0x842e14fffe36661f_power
                - sensor.shelly_plug_s_1_power
                - sensor.0x60a423fffef8d41a_power
                - sensor.shelly_plug_s_2_power
                - sensor.shelly_plug_s_nvr_power
                - sensor.shelly_plug_s_keenetic_hw_power
                - sensor.shelly_plug_s_htr_shelly_heated_tr_power
            above: 3000
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            title: >-
                     ⚠️ *Управляемые розетки*
            message: >-
                        Сработала защита по превышению потребления для розетки:
                        {{ '\n' }}
                        _{{ device_attr(trigger.entity_id, 'name') }}_

#Уведомление о смене Public IP
    - alias: notification public ip changed
      id: notification public ip changed
      initial_state: true
      mode: queued
      triggers:
          - trigger: state
            entity_id: sensor.myip
      actions:
        - parallel:
            - action: telegram_bot.send_message
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                target: !secret telegram_enzokot_chat_id
                title: >-
                         {{ '\U0001f4f6' }} *Трекинг устройств*
                message: >-
                        {%- if trigger.from_state.state in ['unavailable', 'unknown', ''] -%}
                            Внешний IP-адрес определен `{{ trigger.to_state.state }}`
                        {%- else -%}
                            Внешний IP-адрес изменен с `{{ trigger.from_state.state }}` на `{{ trigger.to_state.state }}`
                        {%- endif -%}
            - action: notify.notify
              data:
                title: >-
                         {{ '\U0001f4f6' }} Трекинг устройств
                message: >-
                        {%- if trigger.from_state.state in ['unavailable', 'unknown', ''] -%}
                            Внешний IP-адрес определен {{ trigger.to_state.state }}
                        {%- else -%}
                            Внешний IP-адрес изменен с {{ trigger.from_state.state }} на {{ trigger.to_state.state }}
                        {%- endif -%}
            - choose:
                - conditions:
                    - condition: state
                      entity_id: media_player.lg_smart_tv
                      state: 'on'
                  sequence:
                    - action: notify.kotletochka_tv
                      data:
                        message: 'Интернет: возможно переключились на LTE'

#Уведомление при низком уровне воды
    - alias: notification low level water
      id: notification low level water
      initial_state: true
      triggers:
        - trigger: state
          entity_id: binary_sensor.zhimi_humidifier_cb1_low_water_level
          from: 'off'
          to: 'on'
        - trigger: state
          entity_id: binary_sensor.zhimi_humidifier_ca4_low_water_level
          from: 'off'
          to: 'on'
      conditions:
        - "{{ states(trigger.entity_id | replace('binary_sensor.', 'sensor.') | replace('_low', '')) | int(0) > 0 }}"
      actions:
        - parallel:
            - action: telegram_bot.send_message
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                target: !secret telegram_all_chat_id
                title: >-
                         {{ '\U0001F6B0' }} *Увлажнители*
                message: >-
                        Пора залить воду в увлажнитель: _{{- trigger.to_state.name -}}_
            - choose:
                - conditions:
                    - condition: state
                      entity_id: media_player.lg_smart_tv
                      state: 'on'
                  sequence:
                    - action: notify.kotletochka_tv
                      data:
                        message: >-
                            Нет воды: {{- trigger.to_state.name -}}

#Уведомление обслуживания пылесоса
    - alias: notification vacuum maintenance
      id: notification vacuum maintenance
      initial_state: true
      mode: queued
      triggers:
        - trigger: state
          entity_id: 
            - binary_sensor.vacuum_cleaner_main_brush_maintenance
            - binary_sensor.vacuum_cleaner_side_brush_maintenance
            - binary_sensor.vacuum_cleaner_filter_maintenance
            - binary_sensor.vacuum_cleaner_sensor_dirty_maintenance
          from: 'off'
          to: 'on'
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_all_chat_id
            title: >-
                     {{ '\U0001F527' }} *Степа*
            message: >-
                    Необходимо провести обслуживание: _{{- trigger.to_state.name -}}_

#Уведомления по напряжению сети
    - alias: notifications control voltage
      id: notifications control voltage
      initial_state: true
      mode: queued
      triggers:
        - trigger: numeric_state
          entity_id: sensor.shelly_em_voltage
          above: 250
        - trigger: numeric_state
          entity_id: sensor.shelly_em_voltage
          below: 180
        - trigger: numeric_state
          entity_id: sensor.shelly_em_voltage
          above: 179.9
          below: 250.1
      conditions:
        - condition: template
          value_template: >- 
                    {{ trigger.from_state.state not in ['unavailable', 'unknown', ''] and
                        (
                        trigger.above == None or trigger.below == None or
                        (trigger.from_state.state | float(0.0) >= trigger.below
                        or trigger.from_state.state | float(0.0) <= trigger.above)
                        )
                        and trigger.from_state.state | float(-1.0) >= 0
                        and trigger.to_state.state | float(-1.0) >= 0
                    }}
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            title: >-
                     {% if trigger.above != None and trigger.below != None  %} {{ '\U00002705' }} {% else %} ⚠️ {% endif -%} *Контроль напряжения*
            message: >-
                     {% if trigger.above != None and trigger.below == None and trigger.to_state.state | float(0.0) >= trigger.above | float(0.0) %}
                        Обнаружено *повышенное* напряжение сети {{ trigger.to_state.state }}В
                     {% elif trigger.above == None and trigger.below != None and trigger.to_state.state | float(0.0) <= trigger.below | float(0.0) %}
                        Обнаружено *пониженное* напряжение сети {{ trigger.to_state.state }}В
                     {% else %}
                        В сети *нормальное* напряжение {{ trigger.to_state.state }}В
                     {% endif %}

#Уведомление об успешном бекапе
    - alias: notifications backup instance info
      id: notifications backup instance info
      mode: queued
      trigger_variables:
        not_has_state: "{{ ['unknown', 'unavailable', 'none', None, null, ''] }}"
      triggers:
        - trigger: state
          entity_id: sensor.last_google_backup_train
      conditions:
        - condition: template
          value_template: >- 
            {{
               trigger.from_state.state is defined and
               trigger.to_state.state is defined and
               trigger.from_state.state not in not_has_state
               and trigger.to_state.state not in not_has_state
               and state_attr('sensor.backup_state', 'backups') | count > 0
            }}
      actions:
        - action: homeassistant.update_entity
          entity_id: sensor.disk_use_percent
        - wait_for_trigger:
            - trigger: state
              entity_id: sensor.disk_use_percent
          timeout: 
              seconds: 10
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            title: >-
                  {{ '\U0001F4BD' }} *Резервное копирование*
            message: >-
                     Создана резервная копия с именем `{{ state_attr('sensor.backup_state', 'backups')[-1].name }}`, системный диск заполнен на *{{ states('sensor.disk_use_percent') -}}*%{{ iif(is_state_attr('sensor.backup_state', 'last_uploaded', 'Never'), '', ', свободно на Google диске *' + state_attr('sensor.backup_state', 'free_space_in_google_drive') | replace(' ', '') + '*') }}

#Уведоление о неуспешном входе или о блокировки IP по неуспешным логинам
    - alias: notifications failed login or block IP
      id: notifications failed login or block IP
      mode: parallel
      initial_state: true
      triggers:
        - trigger: persistent_notification
          id: 'http-login'
          update_type:
           - added
           - updated
          notification_id: http-login
        - trigger: persistent_notification
          id: 'ip-ban'
          update_type:
           - added
           - updated
          notification_id: ip-ban
      actions:
        - parallel:
            - action: telegram_bot.send_message
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                target: !secret telegram_enzokot_chat_id
                title: >-
                    {%- if trigger.id == 'http-login' %}
                        {{- '\U0001F6AB' -}}
                    {% else %}
                        {{- '\U000026D4' -}}
                    {% endif %} *Вход в систему*
                message: >
                    {% set ipadress = trigger.notification.message | replace('\n', ' ') | regex_replace('.*\((?=\d+\.\d+\.\d+\.\d+)') | regex_replace('\).*')
                        | replace('Too many login attempts from ', '') %}
                    
                    {% if trigger.id == 'http-login' -%}
                        Неудачная попытка входа в систему с адреса [{{ ipadress }}](https://whatismyipaddress.com/ip/{{- ipadress }})
                    {%- else -%}
                        Заблокирован IP адрес [{{ ipadress }}](https://whatismyipaddress.com/ip/{{- ipadress }}), 5 попыток входа
                    {%- endif %}, [логи]({{- states('sensor.instance_external_url_config') -}}/config/logs)
                disable_web_page_preview: true
            - action: persistent_notification.dismiss
              data:
                notification_id: "{{ trigger.id }}"

#Уведомление о перезапуске НА
    - alias: notification start or stop home assistant
      id: notification start or stop home assistant
      mode: parallel
      initial_state: true
      triggers:
        - trigger: homeassistant
          id: 'homeassistant_start'
          event: start
        - trigger: homeassistant
          event: shutdown
      actions:
        - variables:
            long_start_integrations_name: >-
              {% if states.sensor.start_time.attributes is defined and states.sensor.start_time.attributes.setup_time is defined %}
                {% set separator = joiner(', ') %}
                {% set attrs = states.sensor.start_time.attributes.setup_time %}
                {% for attr in attrs if attrs[attr] | float(0.0) >= 9 %}
                    {{- separator() + attr | replace('_', '-') -}}
                {% endfor %}
              {% else %}
                {{ '' }}
              {% endif %}
        - if:
            - condition: trigger
              id: homeassistant_start
          then:
            - action: homeassistant.update_entity
              data:
                entity_id: 
                  - sensor.errors_in_system_log_command_line
                  - sensor.warnings_in_system_log_command_line
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            disable_notification: true
            disable_web_page_preview: true
            title: >
                {%- if trigger.id == 'homeassistant_start' %}
                    {{- '\U00002705' -}}
                {% else %}
                    {{- '\U000026d4' -}}
                {% endif %} *Трекинг устройств*
            message: >
                {% if trigger.id == 'homeassistant_start' -%}
                    Home Assistant запущен за {{ states('sensor.start_time') }}сек. (версия HA OS: [{{ state_attr('update.home_assistant_operating_system_update', 'installed_version') }}](https://github.com/home-assistant/operating-system/releases/tag/{{- state_attr('update.home_assistant_operating_system_update', 'installed_version') }}), версия Core: [{{ state_attr('update.home_assistant_core_update', 'installed_version') }}](https://github.com/home-assistant/core/releases/tag/{{- state_attr('update.home_assistant_core_update', 'installed_version') }})) {{- '\n' -}}
                    Ошибок: *{{ states('sensor.errors_in_system_log_command_line') }}*, предупреждений: *{{ states('sensor.warnings_in_system_log_command_line') }}* {{- '\n' -}}
                    {{ iif(long_start_integrations_name != '', 'Интеграции (>9c.): _' + long_start_integrations_name + '_', '') }}
                {% else -%}
                    Home Assistant *остановлен*, время работы: {{ states('sensor.online_custom') }}
                {% endif -%}

#Уведомление об ошибках выполнения автоматизаций/скриптов
    - alias: notifications errors in automations or scripts
      id: notifications errors in automations or scripts
      mode: queued
      triggers:
        - trigger: event
          event_type: system_log_event
          event_data:
            level: ERROR
      conditions:
        - condition: state
          entity_id: binary_sensor.local_network_availability
          state: 'on'
        - "{{ (trigger.event.data.name | string) is not search(this.entity_id | string, ignorecase=True) }}"
        - condition: template
          value_template: >-
            {{ 
              trigger.event.data.message | regex_search('Error while executing automation') or
              trigger.event.data.message | regex_search('Error executing script')
            }}
        - condition: template
          value_template: >-
            {{ 
              trigger.event.data.message | length < 4000
            }}
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            parse_mode: 'html'
            disable_web_page_preview: true
            title: "{{ '\U000026d4' }} <b>Ошибка выполнения скрипта</b>"
            message: >
              {{ trigger.event.data.message | string | e -}} <a href="{{- states('sensor.instance_external_url_config') -}}/config/logs"> Check logs.</a>

#Уведомление об объектах, которые перешли в статус недоступно
    - alias: notifications objects in unavailable status
      #id: notifications objects in unavailable status
      initial_state: true
      mode: queued
      max: 70
      trigger_variables:
        not_has_state: "{{ ['unknown', 'unavailable'] }}"
      triggers:
        - trigger: event
          event_type: state_changed
      conditions:
        - condition: state
          entity_id: input_boolean.instances_stoping
          state: 'off'
        - "{{ trigger.event.data.new_state.state in not_has_state }}"
        - "{{ trigger.event.data.entity_id in expand('group.important_devices_unavailable') | map(attribute='entity_id') | list }}"
        - "{{ trigger.event.data.new_state.state != trigger.event.data.old_state.state }}"
      actions:
        - choose:
            - conditions: "{{ is_state('input_boolean.instances_stoping', 'off') }}"
              sequence:
                - action: telegram_bot.send_message
                  data:
                    config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                    target: !secret telegram_enzokot_chat_id
                    disable_notification: true
                    parse_mode: 'html'
                    title: "⚠️ <b>Трекинг устройств</b>"
                    message: >
                      <i>{{ state_attr(trigger.event.data.entity_id, 'friendly_name') }}</i> сменил статус на <b>{{ trigger.event.data.new_state.state }}</b>

#Уведомление о начале/окончании нагрева воды в бойлере
    - alias: notifications on off water heater
      id: notifications on off water heater
      mode: parallel
      initial_state: true
      trigger_variables:
        not_has_state: "{{ ['unknown', 'unavailable', 'none', None, null, ''] }}"
      triggers:
        - trigger: state
          entity_id: sensor.0x842e14fffe13a854_power
      conditions:
        - condition: state
          entity_id: input_boolean.water_heater_season
          state: 'on'
        - condition: template
          value_template: >
            {{ trigger.from_state.state not in not_has_state and
               trigger.to_state.state not in not_has_state and
               trigger.to_state.state != trigger.from_state.state
            }}
        - condition: template
          value_template: >
            {{ 
               (trigger.to_state.state | int(0) >= 850 and trigger.from_state.state | int(0) <= 30)
               or
               (trigger.to_state.state | int(0) < 30 and trigger.from_state.state | int(0) > 850)
            }}
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            disable_notification: true
            title: >-
                {{ iif(trigger.to_state.state | int(0) >= 30, 'ℹ️', '\U00002705') }} *Водонагреватель*
            message: >-
                {{ iif(trigger.to_state.state | int(0) >= 30, '*Включен*', '*Отключен*') }} нагрев воды

#Уведомление о неудачном бекапе Google Drive Backup
    - alias: notifications stale google drive backup
      id: notifications stale google drive backup
      max_exceeded: silent
      initial_state: true
      triggers:
        - trigger: state
          entity_id: binary_sensor.backups_stale
          from: 'off'
          to: 'on'
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            disable_web_page_preview: true
            title: "{{ '\U000026D4' }} *Резервное копирование БД*"
            message: >
                Проблема с бекапом Google Drive, [логи]({{- states('sensor.instance_external_url_config') -}}/hassio/addon/cebe7a76_hassio_google_drive_backup/logs)

#Уведомление о найденном новом устройстве интеграции
    - alias: notifications entry discovery integration
      id: notifications entry discovery integrations
      mode: queued
      initial_state: true
      triggers:
        - trigger: event
          event_type: config_entry_discovered
      actions:
        - parallel:
            - action: telegram_bot.send_message
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                target: !secret telegram_enzokot_chat_id
                disable_notification: true
                title: "{{ '\U0001F4DF' }} *Устройства*"
                message: >
                    Найдено новое устройство в сети, [просмотреть]({{- states('sensor.instance_external_url_config') -}}/config/integrations)

#Уведомление о новой/обновлении информации устройства/сущности
    - alias: notifications entry discovery
      id: notifications entry discovery
      mode: queued
      max: 99
      max_exceeded: silent
      initial_state: true
      triggers:
        - trigger: event
          event_type: entity_registry_updated
        - trigger: event
          id: 'device_registry'
          event_type: device_registry_updated
      conditions:
        - condition: state
          entity_id: input_boolean.instances_stoping
          state: 'off'
      actions:
        - variables:
            name_for_send: >-
              {% if trigger.id == 'device_registry' -%}
                {% if device_attr(trigger.event.data.device_id, 'name_by_user') != none -%}
                  {{- device_attr(trigger.event.data.device_id, 'name_by_user') -}}
                {%- else -%}
                  {% set temp_name = device_attr(trigger.event.data.device_id, 'name') %}
                  {{- iif(temp_name != none, temp_name,  trigger.event.data.device_id, trigger.event.data.device_id) -}}
                {%- endif -%}
              {%- else -%}
                ''
              {%- endif %}
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            disable_notification: true
            parse_mode: 'html'
            title: "{{ '\U0001F4DF' }} <b>Устройства</b>"
            message: >-
              {% if trigger.id == 'device_registry' %}
                <b>{{ trigger.event.data.action | capitalize }}</b>: {{ name_for_send }}
              {% else %}
                <b>{{ trigger.event.data.action | capitalize }}</b>: {{ trigger.event.data.old_entity_id + '->' if trigger.event.data.old_entity_id is defined }}{{ trigger.event.data.entity_id if trigger.event.data.entity_id is defined else 'NA' }}
              {% endif %}

#Уведомление о повторном запуске автоматизации
    - alias: notifications automation already running
      id: notifications automation already running
      initial_state: true
      mode: queued
      triggers:
        - trigger: event
          event_type: system_log_event
          event_data:
            level: WARNING
      conditions:
        - condition: template
          value_template: '{{ "Already running" in (trigger.event.data.message | string) }}'
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            disable_notification: true
            parse_mode: 'html'
            title: "⚠️ <b>Выполнение автоматизаций</b>"
            message: "Повторный запуск автоматизации: {{ trigger.event.data.message | string | e }}"

#Уведомление о критических ошибках в системном журнале
    - alias: system log critical error notify
      id: system log critical error notify
      initial_state: true
      mode: queued
      triggers:
        - trigger: event
          event_type: system_log_event
          event_data:
            level: FATAL
        - trigger: event
          event_type: system_log_event
          event_data:
            level: CRITICAL
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            parse_mode: 'html'
            disable_web_page_preview: true
            title: "{{ '\U000026d4' }} <b>Ошибки системного журнала</b>"
            message: >
              {{ trigger.event.data.message | string | e -}} <a href="{{- states('sensor.instance_external_url_config') -}}/config/logs"> Check logs.</a>

#Уведомление о непрочитанных/заполнении памяти sms на модеме
    - alias: notifications sms unread or full storage
      id: notifications sms unread or full storage
      initial_state: true
      max_exceeded: silent
      trigger_variables:
        not_has_state: "{{ ['unknown', 'unavailable', 'none', None, null, ''] }}"
      triggers:
        - trigger: state
          entity_id: sensor.huawei_e3372h_320_sms_unread
        - trigger: state
          id: 'full_storage'
          entity_id: binary_sensor.huawei_e3372h_320_sms_storage_full
          from: 'off'
          to: 'on'
      conditions:
        - condition: template
          value_template: >
            {{ trigger.id == 'full_storage' or
               trigger.to_state.state not in not_has_state and
               trigger.to_state.state | int(0) > trigger.from_state.state | int(0)
            }}
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            disable_notification: true
            title: >
                {% if trigger.id == 'full_storage' -%} {{ '\U0001F4EE' }} {%- else -%} {{ '\U00002709' }} {%- endif %} *SMS через модем*
            message: >
                Обнаружено {% if trigger.id == 'full_storage' -%} заполнение памяти {%- else -%} *{{ trigger.to_state.state }}* {{ trigger.to_state.state | int(0) | format(morph='непрочитанное', as_text=false) | replace(trigger.to_state.state + ' ', '') }} {%- endif %} sms на {{ device_attr(trigger.entity_id, 'name') }}

#Уведомление об отсутствии link на Keenetic
    - alias: notifications link down keenetic
      id: notifications link down keenetic
      initial_state: true
      max_exceeded: silent
      triggers:
        - trigger: state
          entity_id: binary_sensor.check_keenetic_link_down
          to: 'off'
        - trigger: state
          entity_id: binary_sensor.check_keenetic_link_down
          to: 'on'
        - trigger: homeassistant
          event: start
        - trigger: event
          event_type: event_template_reloaded
      conditions:
        - condition: numeric_state
          entity_id: counter.counter_keenetic_link_down
          above: 0
      actions:
        - parallel:
            - action: notify.huawei_lte
              data:
                message: >-
                         {{ '\U0000203C' }} {{ states('sensor.check_keenetic_link_down') | as_timestamp | timestamp_custom('%Y-%m-%d %H:%M') }} Keenetic link is down
                target: !secret sms_phone_enzokot
                data:
                  url: 'http://192.168.8.1/'
            - action: counter.reset
              entity_id: counter.counter_keenetic_link_down

#Уведомление о новых записях в RSS ленте
    - alias: notifications new rss posts
      id: notifications new rss posts
      mode: queued
      triggers:
        - trigger: event
          event_type: feedreader
      conditions:
        - condition: state
          entity_id: input_boolean.instances_stoping
          state: 'off'
      actions:
        - variables:
            all_chat_id: !secret telegram_all_chat_id
            enzokot_chat_id: !secret telegram_enzokot_chat_id
            stormy_notification: "{{ trigger.event.data.feed_url is search('shtormovye-i-ekstrennye-preduprezhdeniya', ignorecase=True) }}"
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: >
                {% if stormy_notification %}
                    {{ all_chat_id }}
                {% else %}
                    {{ enzokot_chat_id }}
                {% endif %}
            disable_notification: "{{ not stormy_notification }}"
            disable_web_page_preview: true
            parse_mode: 'html'
            title: "{{ '\U0001F4F0' }} <b>RSS новости</b>"
            message: >
                <a href="{{- trigger.event.data.link -}}">{{- trigger.event.data.title | e }} ({{ trigger.event.data.link | regex_findall(find='^(?:\w+://)?([^/?#]+)', ignorecase=True) | join }})</a>

#Уведомление о наличии warning и error в syslog HA
    - alias: notifications warnings or errors in syslog
      id: notifications warnings or errors in syslog
      initial_state: true
      max_exceeded: silent
      triggers:
        - trigger: time_pattern
          hours: "/1"
          minutes: 30
        - trigger: numeric_state
          entity_id: counter.system_log_warning_counter
          above: 10
        - trigger: numeric_state
          entity_id: counter.system_log_error_counter
          above: 5
      conditions:
        - "{{ states('counter.system_log_error_counter') | int(0) > 0 or states('counter.system_log_warning_counter') | int(0) > 0 }}"
        - condition: time
          after: '8:30:00'
          before: '23:00:00'
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            disable_notification: true
            title: "{{ '\U0001F4D6' }} *Данные системного журнала*"
            message: |-
                {% if states('counter.system_log_error_counter') | int(0) > 0 -%}
                    Ошибок в логе: *{{ states('counter.system_log_error_counter') }}*
                {% endif -%}
                {% if states('counter.system_log_warning_counter') | int(0) > 0 -%}
                    Предупреждений в логе: *{{ states('counter.system_log_warning_counter') }}*
                {% endif -%}
                [Просмотр логов]({{- states('sensor.instance_external_url_config') -}}/config/logs)

#Недоступность telegram
    - alias: telegram is offline for instance notification
      id: telegram is offline for instance notification
      initial_state: true
      triggers:
        - trigger: state
          entity_id: 
            - sensor.telegram_status
          from: 'online'
          to: 'offline'
          for: '00:01:20'
      actions:
        - choose:
            - conditions:
              - condition: time
                after: '8:00:00'
                before: '23:00:00'
              sequence:
                - action: notify.huawei_lte
                  data:
                    message: >-
                             {{ '\U0000203C' }} Telegram API недоступно
                    target: !secret sms_phone_enzokot
                    data:
                      url: 'http://192.168.8.1/'
          default:
            - action: notify.email_enzokot_ha
              data:
                title: "⚠️ Трекинг устройств"
                message: "Telegram API недоступно"

#Яндекс станция перешла из/в локальный режим
    - alias: yandex station to or from local mode notification
      id: yandex station to or from local mode notification
      mode: queued
      initial_state: true
      triggers:
        - trigger: state
          id: 'non_local'
          entity_id: 
            - binary_sensor.yandex_station_ff98f029b620413b35e5e278_assumed_state
            - binary_sensor.yandex_station_lr0000000000000252130000de5d13d0_assumed_state
            - binary_sensor.yandex_station_m00ka4300h99tr_assumed_state
          from: 'off'
          to: 'on'
        - trigger: state
          entity_id: 
            - binary_sensor.yandex_station_ff98f029b620413b35e5e278_assumed_state
            - binary_sensor.yandex_station_lr0000000000000252130000de5d13d0_assumed_state
            - binary_sensor.yandex_station_m00ka4300h99tr_assumed_state
          from: 'on'
          to: 'off'
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            disable_notification: true
            parse_mode: 'html'
            title: >
                {% if trigger.id == 'non_local' %} ⚠️ {% else %} {{ '\U00002705' }} {% endif -%} <b>Трекинг устройств</b>
            message: >
                Станция <b>{{- trigger.to_state.name | e -}}</b> {% if trigger.id == 'non_local' -%} отключила локальный режим управления {%- else -%} перешла в локальный режим управления {%- endif %}

#Низкая температура входной горячей трубы
    - alias: hot pipe low or up temperature notification
      id: hot pipe low or up temperature notification
      mode: queued
      initial_state: true
      triggers:
        - trigger: numeric_state
          id: 'below'
          entity_id:
            - sensor.0x00158d0006c5f21e_temperature
            - sensor.0x158d0006b860cf_temperature
            - sensor.0x00158d0008386b56_temperature
          below: 40
          for:
            minutes: 5
        - trigger: numeric_state
          entity_id:
            - sensor.0x00158d0006c5f21e_temperature
            - sensor.0x158d0006b860cf_temperature
            - sensor.0x00158d0008386b56_temperature
          above: 40
          for:
            minutes: 5
      actions:
        - parallel:
            - action: telegram_bot.send_message
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                target: !secret telegram_all_chat_id
                title: >-
                  {{ iif(trigger.id == 'below', '\U0001F6B1' , '\U0001F6B0') }} *Горячее водоснабжение*
                message: >-
                  {{ iif(trigger.id == 'below', 'Остывает' , 'Нагревается') }} горячая труба *{{ area_name(trigger.entity_id) }}*.
            # - choose:
            #   - conditions: "{{ trigger.id == 'below' and trigger.entity_id == 'sensor.0x00158d0006c5f21e_temperature' }}"
            #     sequence:
            #       - action: notify.huawei_lte
            #         data:
            #           message: >-
            #                   {{ '\U0000203C' }} Остывает горячая труба {{ area_name(trigger.entity_id) }}.
            #           target: !secret sms_phone_enzokot
            #           data:
            #             url: 'http://192.168.8.1/'

#Уведомление из Uptime Kuma
    - alias: system down uptime kuma notifications
      id: system down uptime kuma notifications
      mode: queued
      triggers:
        - trigger: webhook
          webhook_id: !secret webhook_id_system_down_uptime_kuma
          local_only: true
          allowed_methods:
            - POST
      conditions:
        - "{{ trigger.json.monitor is not none }}"
      actions:
        - variables:
            status_from: >- 
              {{ iif(trigger.json.heartbeat is not none and trigger.json.heartbeat.status | int(0) == 1, 'online', 'offline', 'offline') }}
        - parallel:
            - action: telegram_bot.send_message
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                target: !secret telegram_enzokot_chat_id
                parse_mode: 'html'
                title: >-
                  {{ iif(status_from == 'online', '\U00002705', '\U000026d4', '\U000026d4') }} <b>Трекинг устройств</b>
                message: >-
                  {{ trigger.json.monitor.name }} <b>{{ iif(status_from == 'online', 'в', 'не в', 'не в') }}</b> сети
            - choose:
                - conditions: "{{ 'tsymbal' in trigger.json.monitor.name | lower and is_state('binary_sensor.internet_availability_ping', 'on') }}"
                  sequence:
                    - action: notify.huawei_lte
                      data:
                        message: >-
                                 {{ iif(status_from == 'online', '\U00002705', '\U000026d4', '\U000026d4') }} Link from Enzokot is {{ iif(status_from == 'online', 'up', 'down', 'down') }}
                        target: !secret sms_phone_to4ko
                        data:
                          url: 'http://192.168.8.1/'

#Уведомление вкл/выкл сигнализации на gw2
    - alias: gw2 alarm turn on off notification
      id: gw2 alarm turn on off notification
      initial_state: true
      triggers:
        - trigger: state
          entity_id: alarm_control_panel.signalka_shliuza_alarm
          not_from:
            - "unknown"
            - "unavailable"
            - ""
          to: 
            - "armed_away"
            - "disarmed"
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            message: "{{ iif(is_state('alarm_control_panel.signalka_shliuza_alarm', 'disarmed'), '\U0001f507 Сигнализация *выключена*', '\U0001f509 Сигнализация *включена*') }}"

#Уведомления о сиcтемных проблемах
    - alias: repairs issue registry
      id: repairs issue registry
      mode: queued
      triggers:
        - trigger: state
          entity_id: sensor.repairs_state
          not_from:
            - "unknown"
            - "unavailable"
        - trigger: homeassistant
          id: 'homeassistant_start'
          event: start
      conditions:
        - "{{ trigger.id == 'homeassistant_start' and states('sensor.repairs_state') | int(0) > 0 or trigger.id != 'homeassistant_start' and trigger.from_state.state | int(0) < trigger.to_state.state | int(0) }}"
      actions:
        - if:
            - "{{ trigger.id == 'homeassistant_start' }}"
          then:
            - delay: 2
        - condition: "{{ trigger.id == 'homeassistant_start' and states('sensor.repairs_state') | int(0) > 0 or trigger.id != 'homeassistant_start' and trigger.from_state.state | int(0) < trigger.to_state.state | int(0) }}"
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            parse_mode: 'html'
            title: >-
                     {{ '\U0001F41B' }} <b>Устранение проблем</b>
            message: >-
                    {%- set issues = state_attr('sensor.repairs_state', 'issues') -%}
                    {%- set datanames = namespace(issue=[]) -%}
                    {% for issue in issues %}
                        {% set datanames.issue = datanames.issue + ['Домен: <b>' + issue.domain + ', </b>описание: <b>' + issue.issue_id + '</b>'] -%}
                    {% endfor %}
                    Обнаружены проблемы ({{- states('sensor.repairs_state') -}}шт):{{'\n'-}} {{ datanames.issue | join(', \n') }}

#Логины SSH
    - alias: login ssh from servers
      id: login ssh from servers
      mode: queued
      triggers:
        - trigger: state
          entity_id: sensor.login_ssh_kotletochka_dell_srv
          not_from:
            - "unknown"
            - "unavailable"
          not_to:
            - "unknown"
            - "unavailable"
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            parse_mode: 'html'
            title: >-
                     {{ '\U00002328' }} <b>Вход по SSH</b>
            message: >-
                    {{- state_attr('sensor.login_ssh_kotletochka_dell_srv', 'friendly_name') -}}: <b>{{- as_timestamp(trigger.to_state.state) | timestamp_custom('%d.%m.%Y %H:%M:%S') -}}</b> 
                    Пользователь: <b>{{- trigger.to_state.attributes.user -}}</b>, адрес: <b>{{- trigger.to_state.attributes.address -}}</b>, tty: <b>{{- trigger.to_state.attributes.tty -}}</b>

#Уведомление по взвешиванию
    - alias: xiaomi mi scale new weight
      id: xiaomi mi scale new weight
      mode: queued
      triggers:
        - trigger: state
          entity_id: sensor.esp_xiaomi_mi_scale_weight
          not_from:
            - "unknown"
            - "unavailable"
          not_to:
            - "unknown"
            - "unavailable"
      actions:
        - variables:
            first_name_father: !secret first_name_father
            first_name_mother: !secret first_name_mother
            first_name_daughter: !secret first_name_daughter
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_all_chat_id
            disable_notification: true
            title: "{{ '\U00002696' }} *Взвешивание*"
            message: >-
                *{%- if trigger.to_state.state | float(0.0) >= 90 %} {{- first_name_father -}}
                {% elif trigger.to_state.state | float(0.0) >= 40 %} {{- first_name_mother -}}
                {% else %} {{- first_name_daughter -}}
                {% endif -%}*
                весит `{{- trigger.to_state.state | round(2, 'common', 0) -}}` {{ trigger.to_state.attributes.unit_of_measurement -}}

#Уведомление о наличии предупреждения на хосте по ext4
    - alias: host kernel ext4 warning
      id: host kernel ext4 warning
      max_exceeded: silent
      triggers:
        - trigger: state
          entity_id: binary_sensor.kernel_ext4_warning
          from: 'off'
          to: 'on'
        - trigger: time
          at: "10:30:00"
      conditions:
        - condition: state
          entity_id: binary_sensor.kernel_ext4_warning
          state: 'on'
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            disable_notification: true
            title: "⚠️ *Host Kernel log*"
            message: >-
                {{ state_attr('binary_sensor.kernel_ext4_warning', 'friendly_name') }}

#Уведомление о мойке полов в тамбуре
    - alias: notification wet entrance floor
      id: notification wet entrance floor
      initial_state: true
      max_exceeded: silent
      triggers:
        - trigger: state
          entity_id: binary_sensor.0x00158d000913dbf1_contact
          from: 'off'
          to: 'on'
          for: 
            seconds: 5
      conditions:
        - condition: time
          after: "06:00:00"
          before: "16:00:00"
          weekday:
            - mon
        - "{{ state_attr(this.entity_id, 'last_triggered') is none or now() - state_attr(this.entity_id, 'last_triggered') > timedelta(hours = 1) }}"
      actions:
        - parallel:
            - action: telegram_bot.send_message
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                target: !secret telegram_enzokot_chat_id
                title: "{{ '\U0001F9F9' }} *Влажная уборка*"
                message: "Обнаружена уборка в общем коридоре"
            - action: notify.huawei_lte
              data:
                message: "Обнаружена уборка в общем коридоре"
                target: !secret sms_phone_user56
                data:
                  url: 'http://192.168.8.1/'

#Уведомление о протечки в подъезде возле шкафа NVR
    - alias: notification water leak near nvr
      id: notification water leak near nvr
      initial_state: true
      mode: queued
      triggers:
        - trigger: state
          entity_id:
            - binary_sensor.0x00158d0009ea0949_water_leak
            - binary_sensor.0x00158d0009ea1c0e_water_leak
          to: 'on'
          for: 
            seconds: 10
      actions:
        - parallel:
            - action: telegram_bot.send_message
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                target: !secret telegram_enzokot_chat_id
                title: "{{ '\U0001F4A7' }} *Датчики протечки*"
                message: "Обнаружена протечка возле NVR/Камер: *{{ state_attr(trigger.entity_id, 'friendly_name') }}*"
            - action: notify.huawei_lte
              data:
                message: "Обнаружена протечка возле NVR/Камер: {{ state_attr(trigger.entity_id, 'friendly_name') }}"
                target: !secret sms_phone_user60
                data:
                  url: 'http://192.168.8.1/'
            - sequence:
                - variables:
                    sm_g973f_rezhim_ne_bespokoit: "{{ states('sensor.sm_g973f_do_not_disturb_sensor') }}"
                - choose:
                    - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
                      sequence:
                        - action: notify.mobile_app_sm_g973f
                          data:
                            message: 'command_dnd'
                            data:
                              command: 'off'
                        - wait_for_trigger:
                            - trigger: state
                              entity_id: sensor.sm_g973f_do_not_disturb_sensor
                          timeout:
                            seconds: 5
                - variables:
                    sm_g973f_rezhim_zvonka: "{{ states('sensor.sm_g973f_ringer_mode') }}"
                - choose:
                    - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
                      sequence:
                        - action: notify.notify
                          data:
                            message: 'command_ringer_mode'
                            data:
                              command: 'normal'
                - action: notify.notify
                  data:
                    title: "{{ '\U0001F4A7' }} Датчики протечки"
                    message: "Обнаружена протечка возле NVR: {{ state_attr(trigger.entity_id, 'friendly_name') }}"
                    data:
                      ttl: 0
                      priority: high
                      channel: alarm_stream
                - choose:
                    - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
                      sequence:
                        - action: notify.mobile_app_sm_g973f
                          data:
                            message: 'command_ringer_mode'
                            data:
                              command: "{{ sm_g973f_rezhim_zvonka }}"
                - choose:
                    - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
                      sequence:
                        - action: notify.mobile_app_sm_g973f
                          data:
                            message: 'command_dnd'
                            data:
                              command: "{{ sm_g973f_rezhim_ne_bespokoit }}"

#Уведомление об открытии дверцы шкафа NVR
    - alias: notification open door nvr box
      id: notification open door nvr box
      initial_state: true
      mode: queued
      triggers:
        - trigger: state
          entity_id: binary_sensor.0x00158d00093e4111_contact
          from: 'off'
          to: 'on'
          for: 
            seconds: 5
      actions:
        - parallel:
            - action: telegram_bot.send_message
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                target: !secret telegram_enzokot_chat_id
                title: "{{ '\U0001F511' }} *Датчик открытия/закрытия*"
                message: "Обнаружено *открытие* дверцы шкафа с NVR"
            - action: notify.huawei_lte
              data:
                message: "Обнаружено открытие дверцы шкафа с NVR"
                target: !secret sms_phone_enzokot
                data:
                  url: 'http://192.168.8.1/'
            - sequence:
                - variables:
                    sm_g973f_rezhim_ne_bespokoit: "{{ states('sensor.sm_g973f_do_not_disturb_sensor') }}"
                - choose:
                    - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
                      sequence:
                        - action: notify.mobile_app_sm_g973f
                          data:
                            message: 'command_dnd'
                            data:
                              command: 'off'
                        - wait_for_trigger:
                            - trigger: state
                              entity_id: sensor.sm_g973f_do_not_disturb_sensor
                          timeout:
                            seconds: 5
                - variables:
                    sm_g973f_rezhim_zvonka: "{{ states('sensor.sm_g973f_ringer_mode') }}"
                - choose:
                    - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
                      sequence:
                        - action: notify.notify
                          data:
                            message: 'command_ringer_mode'
                            data:
                              command: 'normal'
                - action: notify.notify
                  data:
                    title: "{{ '\U0001F511' }} Датчик открытия/закрытия"
                    message: "Обнаружено открытие дверцы шкафа с NVR"
                    data:
                      ttl: 0
                      priority: high
                      channel: alarm_stream
                - choose:
                    - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
                      sequence:
                        - action: notify.mobile_app_sm_g973f
                          data:
                            message: 'command_ringer_mode'
                            data:
                              command: "{{ sm_g973f_rezhim_zvonka }}"
                - choose:
                    - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
                      sequence:
                        - action: notify.mobile_app_sm_g973f
                          data:
                            message: 'command_dnd'
                            data:
                              command: "{{ sm_g973f_rezhim_ne_bespokoit }}"

#Уведомление о перегреве реле кулера шкафа NVR
    - alias: notification overheating 1pm fan nvr box
      id: notification overheating 1pm fan nvr box
      initial_state: true
      mode: queued
      triggers:
        - trigger: state
          id: 'overheating'
          entity_id: binary_sensor.shelly_1pm_fan_nvr_box_overheating
          from: 'off'
          to: 'on'
          for: 
            seconds: 5
        - trigger: numeric_state
          entity_id: sensor.shelly_1pm_fan_nvr_box_temperature
          above: 35
          for:
            seconds: 5
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            title: "{{ '\U0001F321' }} *Реле кулера шкафа NVR*"
            message: >-
              {{ 
                iif(trigger.id == 'overheating', 
                'Обнаружен *перегрев* реле кулера шкафа NVR (*T=' + states('sensor.shelly_1pm_fan_nvr_box_device_temperature', true, true) + '*)', 
                'Обнаружена высокая (*' + trigger.to_state.state + '*) температура в шкафу NVR')
              }}

#Уведомление об отключении NVR
    - alias: notification nvr in unavailable status
      id: notification nvr in unavailable status
      initial_state: true
      mode: queued
      triggers:
        - trigger: state
          entity_id: button.kotletochka_nvr_hw_restart
          to:
          for: 
            seconds: 10
      conditions:
        - condition: state
          entity_id: input_boolean.instances_stoping
          state: 'off'
        - condition: numeric_state
          entity_id: sensor.shelly_plug_s_nvr_power
          below: 15
      actions:
        - parallel:
            - action: telegram_bot.send_message
              data:
                config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                target: !secret telegram_enzokot_chat_id
                title: "{{ '\U0001F4FC' }} *Состояние NVR*"
                message: "Обнаружено *отключение* NVR"
            - action: notify.huawei_lte
              data:
                message: "Обнаружено отключение NVR"
                target: !secret sms_phone_enzokot
                data:
                  url: 'http://192.168.8.1/'
            - sequence:
                - variables:
                    sm_g973f_rezhim_ne_bespokoit: "{{ states('sensor.sm_g973f_do_not_disturb_sensor') }}"
                - choose:
                    - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
                      sequence:
                        - action: notify.mobile_app_sm_g973f
                          data:
                            message: 'command_dnd'
                            data:
                              command: 'off'
                        - wait_for_trigger:
                            - trigger: state
                              entity_id: sensor.sm_g973f_do_not_disturb_sensor
                          timeout:
                            seconds: 5
                - variables:
                    sm_g973f_rezhim_zvonka: "{{ states('sensor.sm_g973f_ringer_mode') }}"
                - choose:
                    - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
                      sequence:
                        - action: notify.notify
                          data:
                            message: 'command_ringer_mode'
                            data:
                              command: 'normal'
                - action: notify.notify
                  data:
                    title: "{{ '\U0001F4FC' }} Состояние NVR"
                    message: "Обнаружено отключение NVR"
                    data:
                      ttl: 0
                      priority: high
                      channel: alarm_stream
                - choose:
                    - conditions: "{{ sm_g973f_rezhim_zvonka != 'normal' }}"
                      sequence:
                        - action: notify.mobile_app_sm_g973f
                          data:
                            message: 'command_ringer_mode'
                            data:
                              command: "{{ sm_g973f_rezhim_zvonka }}"
                - choose:
                    - conditions: "{{ sm_g973f_rezhim_ne_bespokoit != 'off' }}"
                      sequence:
                        - action: notify.mobile_app_sm_g973f
                          data:
                            message: 'command_dnd'
                            data:
                              command: "{{ sm_g973f_rezhim_ne_bespokoit }}"

#Уведомление о зарядке телефона
    - alias: notification full battery level sm g973f
      id: notification full battery level sm g973f
      initial_state: true
      max_exceeded: silent
      triggers:
        - trigger: numeric_state
          entity_id: sensor.sm_g973f_battery_level
          above: 99
      conditions:
        - condition: state
          entity_id: binary_sensor.sm_g973f_is_charging
          state: "on"
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            title: "{{ '\U0001F50B' }} *Состояние телефона*"
            message: "Телефон полностью заряжен"

#Уведомление об отключении камер в детской и коридоре
    - alias: notification tapo c100 cr or hw disconnected
      id: notification tapo c100 cr or hw disconnected
      initial_state: true
      mode: parallel
      triggers:
        - trigger: webhook
          id: 'cr'
          webhook_id: !secret webhook_id_cctv_cr_off
          local_only: true
          allowed_methods:
            - PUT
        - trigger: webhook
          webhook_id: !secret webhook_id_cctv_hw_off
          local_only: true
          allowed_methods:
            - PUT
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            title: "⚠️ *Трекинг устройств*"
            message: "Камера в *{{- iif(trigger.id == 'cr', 'детской', 'коридоре') -}}* отключена"

#Пересылка уведомлений с почты Download station ya.ru
    - alias: notification forward message from download station to telegram
      id: notification forward message from download station to telegram
      initial_state: true
      mode: parallel
      triggers:
        - trigger: event
          event_type: imap_content
          event_data:
            initial: true
      actions:
        - parallel:
            - action: imap.seen
              data:
                entry: "{{ trigger.event.data['entry_id'] }}"
                uid: "{{ trigger.event.data['uid'] }}"
            - sequence:
                - action: imap.fetch
                  data:
                    entry: "{{ trigger.event.data['entry_id'] }}"
                    uid: "{{ trigger.event.data['uid'] }}"
                  response_variable: message_text
                - action: telegram_bot.send_message
                  data:
                    config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
                    target: !secret telegram_enzokot_chat_id
                    title: "{{ '\U0001F4C2' }} *Download station*"
                    message: "{{ message_text['text'] }}"
                    disable_web_page_preview: true

#Оповещение о завершении восстановления из резервной копии
    - alias: notification restore backup finished
      id: notification restore backup finished
      initial_state: true
      mode: queued
      triggers:
        - trigger: state
          entity_id: sensor.backup_backup_manager_state
          from: "restore_backup"
          not_to:
            - "unknown"
            - "unavailable"
      actions:
        - action: telegram_bot.send_message
          data:
            config_entry_id: '{{ config_entry_id("notify.telegram_enzokot_to_bot") }}'
            target: !secret telegram_enzokot_chat_id
            title: "{{ '\U0001F4BD' }} *Резервное копирование*"
            message: "Восстановление из резервной копии завершено"


#Добавление устройств zigbee
    - alias: disable_zigbee_join_timer
      id: disable_zigbee_join_timer
      initial_state: true
      trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.zigbee_permit_join
      action:
          - service: script.toggle_permit_join_z2m
            data:
              topicpayload: false

    - alias: start_stop_zigbee_join_timer
      id: start_stop_zigbee_join_timer
      initial_state: true
      trigger:
      - platform: state
        entity_id: binary_sensor.state_permit_join_z2m_frontend
      action:
          - service: >
                {% if trigger.to_state.state == 'on' %}
                  timer.start
                {%- else -%}
                  timer.cancel
                {%- endif %}
            data:
              entity_id: timer.zigbee_permit_join

    - alias: zigbee_device_joined_notification
      id: zigbee_device_joined_notification
      trigger:
        platform: mqtt
        topic: 'zigbee2mqtt/bridge/event'
      condition:
        condition: template
        value_template: '{{trigger.payload_json.type == "device_interview" and trigger.payload_json.data.status == "successful" and trigger.payload_json.data.supported}}'
      action:
        - service: telegram_bot.send_message
          data:
            title: >-
                     {{ '\U0001f41d' }} <b>Добавление устройств Zigbee</b>
            message: >-
                      Добавлено новое устройство:
                      {{- '\n' -}}
                      Имя: {{trigger.payload_json.data.friendly_name}},
                      {{- '\n' -}}
                      Поставщик: {{trigger.payload_json.data.definition.vendor}},
                      {{- '\n' -}}
                      Модель: {{trigger.payload_json.data.definition.model}}
                      {{- '\n' -}}
                      Описание: {{trigger.payload_json.data.definition.description}}
            disable_notification: true
            parse_mode: 'html'
            target: !secret telegram_enzokot_chat_id
            
#Проверка засыпания и отключения устройств zigbee
    - alias: zigbee2mqtt_devices_last_seen
      id: zigbee2mqtt_devices_last_seen
      trigger:
        - platform: time_pattern
          hours: "/1"
      condition:
        - condition: template
          value_template: >
            {% set time_limit = as_timestamp(now()) - 4*60*60 %}
            {{ states | selectattr('attributes.last_seen', 'defined') | selectattr('attributes.linkquality', 'defined') | selectattr('attributes.last_seen', 'ne', None) | selectattr('attributes.last_seen', '<', time_limit * 1000 ) | map(attribute = 'name') | list | count  >= 1 }}
      action:  
        - service: telegram_bot.send_message
          data:
            title: >-
                      {% set time_limit = as_timestamp(now()) - 4*60*60 %}
                      {% set missing = states | selectattr('attributes.last_seen', 'defined') | selectattr('attributes.linkquality', 'defined') | selectattr('attributes.last_seen', 'ne', None) | selectattr('attributes.last_seen', '<', time_limit * 1000 ) | map(attribute = 'attributes.device.friendlyName') | unique | list %}
                      {% set missing_count = missing | count %}

                      {%- if missing_count > 0 %} {{ '\U000026a0' }} {%- else %} {{ '\U00002705' }} {%- endif %} *Контроль устройств Zigbee*
            disable_notification: true
            target: !secret telegram_enzokot_chat_id
            message: >
              {% set time_limit = as_timestamp(now()) - 4*60*60 %}
              {% set missing = states | selectattr('attributes.last_seen', 'defined') | selectattr('attributes.linkquality', 'defined') | selectattr('attributes.last_seen', 'ne', None) | selectattr('attributes.last_seen', '<', time_limit * 1000 ) | map(attribute = 'attributes.device.friendlyName') | unique | list %}
              {% set missing_count = missing | count %}
              {% set z2m_uptime = ((states('sensor.zigbee2mqtt_bridge_uptime') | int) / 3600) | round(1) %}

              {% if missing_count > 0 %}Более 4 часов (время работы z2m: {{z2m_uptime}}ч) не было данных от: {{ missing | join(', ') }}
              {% else %}Все устройства доступны.{% endif %}

#Проверка качества связи устройств zigbee
    - alias: zigbee2mqtt_devices_link_check
      id: zigbee2mqtt_devices_link_check
      trigger:
        - platform: time_pattern
          hours: "/1"
      condition:
        - condition: template
          value_template: >
            {{ states | selectattr('attributes.linkquality', 'defined') | selectattr('attributes.linkquality', 'ne', None) | selectattr('attributes.linkquality', '<', 20 ) | map(attribute = 'attributes.device.friendlyName') | unique | list | count > 0 }}
      action:  
        - service: script.zigbee2mqtt_linkuality_check
        
#Атоматическая калибровка локальной температуры термоголовок
    - alias: auto_local_temperature_calibration_thermostats
      id: auto_local_temperature_calibration_thermostats
      trigger:
        - platform: time_pattern
          minutes: "/55"
      action:
        - service: script.auto_local_temperature_calibration_thermostats
          data:
            namevalve: 'Bedroom valve with thermostat'
            objectvalve: 'climate.0x60a423fffe968719'
            objectvalvewindow: 'switch.0x60a423fffe968719_window_detection'
            objectsensortemperature: 'sensor.esp_xiaomi_bed_room_temperature'
        - service: script.auto_local_temperature_calibration_thermostats
          data:
            namevalve: 'Living room valve with thermostat'
            objectvalve: 'climate.0x5c0272fffec9db22'
            objectvalvewindow: 'switch.0x5c0272fffec9db22_window_detection'
            objectsensortemperature: 'sensor.esp_xiaomi_living_room_temperature'
        - service: script.auto_local_temperature_calibration_thermostats
          data:
            namevalve: 'Childrens room valve with thermostat'
            objectvalve: 'climate.0x5c0272fffec89454'
            objectvalvewindow: 'switch.0x5c0272fffec89454_window_detection'
            objectsensortemperature: 'sensor.esp_xiaomi_childrens_room_temperature'

        - service: script.auto_local_temperature_calibration_thermostats
          data:
            namevalve: 'Kitchen valve with thermostat'
            objectvalve: 'climate.0x5c0272fffe8de819'
            objectvalvewindow: 'switch.0x5c0272fffe8de819_window_detection'
            objectsensortemperature: 'sensor.esp_xiaomi_kitchen_temperature'

#Автоматическая установка boost режима во время сна
    - alias: auto_boost_mode_thermostats_at_sleeping_time
      id: auto_boost_mode_thermostats_at_sleeping_time
      trigger:
        - platform: time
          at:
            - "02:30:00"
            - "05:30:00"
            - "23:30:00"
      action:
        - choose:
            - conditions:
                - condition: state
                  entity_id: input_boolean.thermostat_bedroom_night_mode
                  state: 'on'
                - condition: numeric_state
                  entity_id: sensor.thermostat_bedroom_valve_position
                  above: 79
                # - condition: numeric_state
                #   entity_id: sensor.esp_xiaomi_bed_room_temperature
                #   below: 25.7
              sequence:      
                - service: climate.set_preset_mode
                  data:
                    entity_id: climate.0x60a423fffe968719
                    preset_mode: 'boost'
        - choose:
            - conditions:
                - condition: state
                  entity_id: input_boolean.thermostat_childrensroom_night_mode
                  state: 'on'
                - condition: numeric_state
                  entity_id: sensor.thermostat_childrens_room_valve_position
                  above: 79
                # - condition: numeric_state
                #   entity_id: sensor.esp_xiaomi_childrens_room_temperature
                #   below: 25.7
              sequence:      
                - service: climate.set_preset_mode
                  data:
                    entity_id: climate.0x5c0272fffec89454
                    preset_mode: 'boost'

    - alias: switching_thermostat_night_mode
      id: switching_thermostat_night_mode
      initial_state: 'true'
      trigger:
        - platform: state
          entity_id: 
             - input_boolean.thermostat_bedroom_night_mode
             - input_boolean.thermostat_childrensroom_night_mode
             - automation.auto_boost_mode_thermostats_at_sleeping_time
      condition:
        - condition: template
          value_template: >
             {{ 
                (is_state('input_boolean.thermostat_bedroom_night_mode', 'off') and is_state('input_boolean.thermostat_childrensroom_night_mode', 'off') 
                and is_state('automation.auto_boost_mode_thermostats_at_sleeping_time', 'on'))
                or
                ((is_state('input_boolean.thermostat_bedroom_night_mode', 'on') or is_state('input_boolean.thermostat_childrensroom_night_mode', 'on')) 
                and is_state('automation.auto_boost_mode_thermostats_at_sleeping_time', 'off'))
             }}
      action:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.platform == 'state' and trigger.to_state.domain == 'input_boolean' }}"
                sequence:      
                    - service: >
                            {% if is_state('input_boolean.thermostat_bedroom_night_mode', 'off') and is_state('input_boolean.thermostat_childrensroom_night_mode', 'off') %}
                              automation.turn_off
                            {% else %}
                              automation.turn_on
                            {% endif %}
                      entity_id: automation.auto_boost_mode_thermostats_at_sleeping_time
              - conditions:
                  - condition: template
                    value_template: "{{ trigger.platform == 'state' and trigger.to_state.domain == 'automation' }}"
                sequence:      
                    - service: >
                            {% if is_state('automation.auto_boost_mode_thermostats_at_sleeping_time', 'off') %}
                              input_boolean.turn_off
                            {% else %}
                              input_boolean.turn_on
                            {% endif %}
                      entity_id: 
                        - input_boolean.thermostat_bedroom_night_mode
                        - input_boolean.thermostat_childrensroom_night_mode

#Установка скорости мотора штор на текущую, для обновления атрибута last_seen
    - alias: auto_set_speed_shades_drive_motor
      id: auto_set_speed_shades_drive_motor
      trigger:
        - platform: time_pattern
          minutes: "/55"
      action:
        - service: script.set_speed_shades_drive_motor
          data:
            namemotor: 'Left shades drive motor kitchen'
            speed: "{{ state_attr('cover.0x847127fffed62861', 'motor_speed') }}"
        - service: script.set_speed_shades_drive_motor
          data:
            namemotor: 'Right shades drive motor kitchen'
            speed: "{{ state_attr('cover.0x847127fffed4907d', 'motor_speed') }}"
